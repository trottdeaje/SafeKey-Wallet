{"version":3,"sources":["assets/images/file-text.png","assets/images/qr-background.svg","assets/images/share-min.svg","assets/images/camera.png","assets/images/nocam.png","screens/styles.js","screens/Loading.js","screens/HomeScreen.js","screens/SelectDocumentScreen.js","screens/QrScanScreen.js","components/QrTile/QrTile.js","components/QrTile/script.js","screens/QrListScreen.js","screens/NoticeSafeKeyScreen.js","screens/NoticeVaccinationScreen.js","screens/NoticeContactTracingScreen.js","screens/ShowSafeKeyQrScreen.js","screens/ShowVaccinationQrScreen.js","screens/ShowContactKeyQRScreen.js","screens/NotFoundScreen.js","screens/NoCameraScreen.js","components/Modal/Modal.js","components/Version/Version.js","src/serviceWorkerRegistration.js","App.js","assets/icon.png","assets/images/bm-logo.svg"],"names":["module","exports","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","paddingHorizontal","containerTop","flexDirection","paddingTop","width","marginBottom","btn","maxWidth","borderRadius","paddingVertical","btnLine","borderWidth","borderColor","btnText","textAlign","fontSize","bold","color","fontFamily","shadow","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","text","li","alignSelf","lineHeight","marginLeft","noticeHeader","marginTop","QrHeader","fontWeight","center","display","bmQrLogo","position","scrollStyle","marginVertical","Loading","View","style","ActivityIndicator","HomeScreen","navigation","useState","passExists","setPassExists","vaxExists","setVaxExists","contactKeyExists","setContactKeyExists","useAssets","require","assets","useEffect","a","async","AsyncStorage","getItem","value","getPasskey","e","alert","getVax","getContactKey","dispatch","StackActions","replace","ScrollView","contentContainerStyle","Image","resizeMethod","source","Text","TouchableOpacity","onPress","navigate","SelectDocument","ErrorInfo","SetErrorInfo","toast","useToast","fileIsLoading","SetFileIsLoading","margin","disabled","recordcallback","DocumentPicker","type","result","message","codes","length","console","error","data","toString","keyRef","some","keyword","includes","indexStart","indexOf","indexEnd","keywordKey","substring","indexStartKey","indexEndKey","keywordBMKey","keywordBMKeyFinal","slice","isNaN","year","parseInt","substr","day","month","date","Date","formatYmd","toISOString","todayDate","parse","dateRaw","padding","Linking","openURL","options","weekday","dateQR","toLocaleString","setItem","Analytics","purpose","CommonActions","reset","index","routes","name","show","id","duration","animationType","handlePDFUpload","configs","scale","once","start","step","stop","resultOpts","singleCodeInPage","multiCodesInPage","maxCodesInPage","improve","jsQR","size","PDF_QR_JS","decodeSinglePage","uri","marginRight","window","Dimensions","get","screen","QrScanScreen","scanned","setScanned","facing","setFacing","invalidQR","setInvalidQR","dimensions","setDimensions","onChange","addEventListener","removeEventListener","textAlignVertical","zIndex","minHeight","facingMode","onLoad","log","delay","onError","onScan","keywords","hide","offsetBottom","normalColor","goBack","handleBarCodeScanned","letterSpacing","QrTile","props","tileBg","setTileBg","tileBgTwo","setTileBgTwo","screenSkipSafeKey","setScreenSkipSafeKey","screenSkipVaccineKey","setScreenSkipVaccineKey","screenSkipContactKey","setScreenSkipContactKey","passExpired","setPassExpired","contactKeyExpired","setContactKeyExpired","passExpiry","getSafekeyExpiry","contactKeyExpiry","getContactKeyExpiry","getSafekeyNoticeStatus","getVaccineNoticeStatus","getContactNoticeStatus","myRef","React","createRef","hideMenu","current","document","useNavigation","LinearGradient","x","y","end","colors","paddingLeft","infoScreen","Ionicons","right","top","ref","removeItem","qrlist","btnCircle","bottom","infoPoints","QrList","undefined","vax","setVax","passkey","setPasskey","contactKey","setContactKey","isOpen","setIsOpen","useFonts","OpenSans_400Regular","OpenSans_600SemiBold","fontsLoaded","paddingBottom","slideSpeed","direction","spacing","iconResting","Feather","iconActive","background","onClick","icon","PassInfo","isChecked","setChecked","checkboxAvailable","setCheckboxAvailable","Checkbox","isAvailableAsync","then","isAvailable","marginEnd","onValueChange","VaxInfo","ContactTracingInfo","ShowQrPass","setPassExpiry","getPassExpiry","quietZone","ShowQrVax","ShowQrContactKey","contactExpiry","setContactExpiry","getContactExpiry","NotFound","nocam","image","button","NoCamera","learnUrl","setLearnUrl","DetectRTC","load","browser","isChrome","isEdge","isFirefox","isOpera","isSafari","modalStyle","customBackdrop","modalInnerView","overflow","IconView","AppIcon","marginHorizontal","ModalComponent","showModal","setShowModal","onClose","SafeAreaView","animationIn","isVisible","VersionStyle","left","Version","modalVisible","setModalVisible","devicePlatform","setDevicePlatform","showInstallBtn","setShowInstallBtn","userAgent","navigator","platform","os","test","getOS","event","preventDefault","deferredPrompt","filter","brightness","standalone","matchMedia","matches","promptEvent","prompt","userChoice","outcome","handleInstallBtnClick","Modal","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","Stack","createStackNavigator","App","hasLoaded","setHasLoaded","hasQR","setHasQR","screenName","setScreenName","OpenSans_700Bold","OpenSans_800ExtraBold","linking","prefixes","screens","Home","read","navigationRef","useRef","routeNameRef","offset","swipeEnabled","NavigationContainer","onReady","getCurrentRoute","onStateChange","previousRouteName","currentRouteName","fallback","Navigator","screenOptions","headerTitleStyle","headerRight","initialRouteName","Screen","component","title","headerTitle","paddingRight","SelectDocumentScreen","QrListScreen","headerTitleAlign","PassInfoScreen","VaxInfoScreen","ContactInfoScreen","ShowQrScreenPass","ShowQrScreenVax","ShowQrScreenContact","URL","process","href","origin","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/app.99b3e525.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/file-text.a031f6ff.png\";","module.exports = __webpack_public_path__ + \"static/media/qr-background.83209ff7.svg\";","module.exports = __webpack_public_path__ + \"static/media/share-min.31430806.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.c560f04f.png\";","module.exports = __webpack_public_path__ + \"static/media/nocam.3d6e5311.png\";","import { StyleSheet } from \"react-native\";\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 20,\r\n  },\r\n  containerTop: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    paddingHorizontal: 20,\r\n    paddingTop: 20,\r\n    width: \"100%\",\r\n    marginBottom: 10,\r\n  },\r\n  btn: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    borderRadius: 10,\r\n    paddingVertical: 11,\r\n  },\r\n  btnLine: {\r\n    borderWidth: 2.5,\r\n    borderColor: \"#1971ef\",\r\n  },\r\n  btnText: {\r\n    textAlign: \"center\",\r\n    fontSize: 18,\r\n  },\r\n  bold: {\r\n    textAlign: \"center\",\r\n    color: \"#333\",\r\n    fontFamily: \"OpenSans_600SemiBold\",\r\n  },\r\n  shadow: {\r\n    shadowColor: \"#470000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    elevation: 2,\r\n  },\r\n  text: {\r\n    color: \"#333\",\r\n    fontFamily: \"OpenSans_400Regular\",\r\n    fontSize: 14,\r\n  },\r\n  li: {\r\n    alignSelf: \"flex-start\",\r\n    color: \"black\",\r\n    fontFamily: \"OpenSans_400Regular\",\r\n    lineHeight: 30,\r\n    marginBottom: 30,\r\n    fontSize: 18,\r\n    textAlign: \"left\",\r\n    marginLeft: 0,\r\n    color: \"#333333\",\r\n  },\r\n  noticeHeader: {\r\n    fontFamily: \"OpenSans_600SemiBold\",\r\n    fontSize: 19,\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n    alignSelf: \"flex-start\",\r\n    color: \"#333333\",\r\n  },\r\n  QrHeader: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 20,\r\n    marginTop: 20,\r\n    color: \"#000\",\r\n    textAlign: \"center\",\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  bmQrLogo: {\r\n    width: 55,\r\n    height: 80,\r\n    position: \"absolute\",\r\n  },\r\n  scrollStyle: {\r\n    backgroundColor: \"#fff\",\r\n    flex: 1,\r\n    marginVertical: \"auto\",\r\n  },\r\n});\r\n\r\nexport { styles };\r\n","import React from \"react\";\r\nimport { View, ActivityIndicator } from \"react-native\";\r\nimport { styles } from \"./styles\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <View style={[styles.container, { marginBottom: 0, paddingHorizontal: 0 }]}>\r\n      <ActivityIndicator color=\"#000f0f\" />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, TouchableOpacity, Image, ScrollView } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport Loading from \"./Loading\";\r\nimport { styles } from \"./styles\";\r\nimport { useAssets } from \"expo-asset\";\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [passExists, setPassExists] = useState(null);\r\n  const [vaxExists, setVaxExists] = useState(null);\r\n  const [contactKeyExists, setContactKeyExists] = useState(null);\r\n\r\n  const [assets] = useAssets([\r\n    require(\"../assets/images/qr-background.svg\"),\r\n    require(\"../assets/images/bm-logo.svg\"),\r\n    require(\"../assets/images/share-min.svg\"),\r\n  ]);\r\n  useEffect(() => {\r\n    try {\r\n      async function getPasskey() {\r\n        const value = await AsyncStorage.getItem(\"BM.KEY\");\r\n        if (value !== null) {\r\n          setPassExists(true);\r\n        } else {\r\n          setPassExists(false);\r\n        }\r\n      }\r\n      getPasskey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [passExists]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getVax() {\r\n        const value = await AsyncStorage.getItem(\"BM.VAX\");\r\n        if (value !== null) {\r\n          setVaxExists(true);\r\n        } else {\r\n          setVaxExists(false);\r\n        }\r\n      }\r\n      getVax();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getContactKey() {\r\n        const value = await AsyncStorage.getItem(\"BM.CONTACTKEY\");\r\n        if (value !== null) {\r\n          setContactKeyExists(true);\r\n        } else {\r\n          setContactKeyExists(false);\r\n        }\r\n      }\r\n      getContactKey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [contactKeyExists]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      vaxExists === true ||\r\n      passExists === true ||\r\n      contactKeyExists === true\r\n    ) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [vaxExists, passExists, contactKeyExists]);\r\n\r\n  return (\r\n    <>\r\n      {!assets ? (\r\n        <Loading />\r\n      ) : (\r\n        <ScrollView\r\n          contentContainerStyle={styles.container}\r\n          style={{ backgroundColor: \"#fff\" }}\r\n        >\r\n          <View>\r\n            <Image\r\n              resizeMethod=\"auto\"\r\n              style={{ height: 150, width: 170, marginTop: 25 }}\r\n              source={require(\"../assets/images/qr-background.svg\")}\r\n            />\r\n          </View>\r\n          <Text style={[styles.bold, { marginBottom: 2, fontSize: 18 }]}>\r\n            No SafeKeys found\r\n          </Text>\r\n          <Text\r\n            style={[\r\n              styles.text,\r\n              { marginTop: 0, marginBottom: 15, textAlign: \"center\" },\r\n            ]}\r\n          >\r\n            Press Scan or Select to add one.\r\n          </Text>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              navigation.navigate(\"Scan QR\");\r\n            }}\r\n            style={[\r\n              styles.btn,\r\n              styles.shadow,\r\n              { backgroundColor: \"#1971ef\", borderWidth: 0 },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.btnText,\r\n                {\r\n                  color: \"white\",\r\n                },\r\n              ]}\r\n            >\r\n              Scan Document\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.btn,\r\n              styles.shadow,\r\n              styles.btnLine,\r\n              {\r\n                backgroundColor: \"#fff\",\r\n                marginTop: 16,\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(\"Select Document\");\r\n            }}\r\n          >\r\n            <Text style={[styles.btnText, { color: \"#1971ef\" }]}>\r\n              Select Document\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </ScrollView>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  Image,\r\n  Linking,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\nimport * as DocumentPicker from \"expo-document-picker\";\r\nimport { useToast } from \"react-native-toast-notifications\";\r\nimport { styles } from \"./styles\";\r\n\r\nimport { useAssets } from \"expo-asset\";\r\nimport { PDF_QR_JS } from \"pdf-qr\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport Loading from \"./Loading\";\r\nimport * as Analytics from \"expo-firebase-analytics\";\r\n\r\nconst SelectDocument = ({ navigation }) => {\r\n  const [ErrorInfo, SetErrorInfo] = useState(\"\");\r\n  const toast = useToast();\r\n  const [assets] = useAssets([require(\"../assets/images/file-text.png\")]);\r\n  const [fileIsLoading, SetFileIsLoading] = useState(false);\r\n  const PickDocument = async () => {\r\n    try {\r\n      let result = await DocumentPicker.getDocumentAsync({\r\n        type: \"application/pdf\",\r\n      });\r\n      if (result.type !== \"cancel\") {\r\n        // PDF page target\r\n        const pageNr = 1;\r\n        // qr scanning configuration\r\n        const configs = {\r\n          scale: {\r\n            once: true,\r\n            value: 5,\r\n            start: 0.2,\r\n            step: 0.2,\r\n            stop: 2,\r\n          },\r\n          resultOpts: {\r\n            singleCodeInPage: true,\r\n            multiCodesInPage: false,\r\n            maxCodesInPage: 1,\r\n          },\r\n          improve: true,\r\n          jsQR: {},\r\n        };\r\n        SetErrorInfo(\r\n          <View style={{ marginTop: 20 }}>\r\n            <ClipLoader size=\"14px\" color=\"#1971ef\" />\r\n          </View>\r\n        );\r\n        SetFileIsLoading(true);\r\n        PDF_QR_JS.decodeSinglePage(result.uri, pageNr, configs, recordcallback);\r\n\r\n        function recordcallback(result) {\r\n          if (result.message === \"Invalid PDF structure.\") {\r\n            SetErrorInfo(\r\n              <View style={{ marginTop: 15 }}>\r\n                <Text\r\n                  style={[\r\n                    styles.text,\r\n                    { color: \"#d71f2e\", textAlign: \"center\" },\r\n                  ]}\r\n                >\r\n                  Invalid file type. Please select a valid SafeKey PDF file.\r\n                </Text>\r\n              </View>\r\n            );\r\n            SetFileIsLoading(false);\r\n            return;\r\n          }\r\n          // check if array is empty\r\n          if (result.codes.length === 0) {\r\n            console.error(\"No QR Found\");\r\n            SetErrorInfo(\r\n              <View style={{ marginTop: 15 }}>\r\n                <Text\r\n                  style={[\r\n                    styles.text,\r\n                    { color: \"#d71f2e\", textAlign: \"center\" },\r\n                  ]}\r\n                >\r\n                  SafeKey QR Code not detected. Please try again.\r\n                </Text>\r\n              </View>\r\n            );\r\n            SetFileIsLoading(false);\r\n            return;\r\n          }\r\n          const handlePDFUpload = async () => {\r\n            const data = result.codes.toString();\r\n            const keywords = [\":BM.KEY:\", \":BM.VAX:\", \":BM.CONTACTKEY:\"];\r\n            const keyRef = [\":BM.KEY:\", \":BM.CONTACTKEY:\"];\r\n            // Find keywords that match our array of items\r\n            if (keywords.some((keyword) => data.includes(keyword))) {\r\n              // Gets date from pass and checks to see if it's a number\r\n              if (keyRef.some((keyword) => data.includes(keyword))) {\r\n                // Get QR Keyword\r\n                let indexStart = data.indexOf(\":\");\r\n                indexStart += 1;\r\n                let indexEnd = data.indexOf(\":\", indexStart + 1);\r\n                let keywordKey = data.substring(indexStart, indexEnd);\r\n                // set start index for expiry date\r\n                let indexStartKey =\r\n                  keywordKey === \"BM.KEY\"\r\n                    ? data.indexOf(\":\", 130)\r\n                    : keywordKey === \"BM.CONTACTKEY\"\r\n                    ? data.indexOf(\":\", 142)\r\n                    : null;\r\n                // set end index for expiry date\r\n                let indexEndKey = data.indexOf(\"/\");\r\n                // get expiry date value\r\n                let keywordBMKey = data.substring(indexStartKey, indexEndKey);\r\n                let keywordBMKeyFinal = keywordBMKey.slice(1);\r\n                if (!isNaN(keywordBMKeyFinal)) {\r\n                  let year = parseInt(keywordBMKeyFinal.substr(0, 4), 10);\r\n                  let day = parseInt(keywordBMKeyFinal.substr(6), 10);\r\n                  let month = parseInt(keywordBMKeyFinal.substr(4, 2), 10);\r\n                  let date = new Date(year, month - 1, day);\r\n                  const formatYmd = (date) => date.toISOString().slice(0, 10);\r\n                  let todayDate = Date.parse(formatYmd(new Date()));\r\n                  var dateRaw = Date.parse(`${year}/${month}/${day}`);\r\n                  let dayInMilliSeconds = 86400000;\r\n                  if (dateRaw + dayInMilliSeconds <= todayDate) {\r\n                    SetFileIsLoading(false);\r\n                    return SetErrorInfo(\r\n                      <View\r\n                        style={[\r\n                          styles.center,\r\n                          {\r\n                            width: \"100%\",\r\n                            maxWidth: 500,\r\n                            marginTop: 20,\r\n                            padding: 10,\r\n                            textAlign: \"center\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Text\r\n                          style={[\r\n                            styles.text,\r\n                            {\r\n                              color: \"red\",\r\n                              fontFamily: \"OpenSans_600SemiBold\",\r\n                            },\r\n                          ]}\r\n                        >\r\n                          {keywordKey === \"BM.KEY\"\r\n                            ? \"This SafeKey has expired. Click the button below to visit the SafeKey renewal page.\"\r\n                            : keywordKey === \"BM.CONTACTKEY\"\r\n                            ? \"This Contact Tracing Key has expired. Click the button below to visit the SafeKey renewal page.\"\r\n                            : \"\"}\r\n                        </Text>\r\n\r\n                        <TouchableOpacity\r\n                          style={[\r\n                            styles.btn,\r\n                            styles.shadow,\r\n                            styles.btnLine,\r\n                            {\r\n                              marginTop: 10,\r\n                            },\r\n                          ]}\r\n                          onPress={() =>\r\n                            Linking.openURL(\"https://www.gov.bm/safekey\")\r\n                          }\r\n                        >\r\n                          <Text style={[styles.btnText, { color: \"#1971ef\" }]}>\r\n                            Renew\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    );\r\n                  }\r\n\r\n                  let options = {\r\n                    weekday: \"long\",\r\n                    year: \"numeric\",\r\n                    month: \"long\",\r\n                    day: \"numeric\",\r\n                  };\r\n                  const dateQR = date.toLocaleString(\"en-US\", options);\r\n                  await AsyncStorage.setItem(\r\n                    keywordKey === \"BM.KEY\" ? \"passExpiry\" : \"contactExpiry\",\r\n                    dateQR\r\n                  );\r\n                  await AsyncStorage.setItem(\r\n                    keywordKey === \"BM.KEY\"\r\n                      ? \"passExpiryRaw\"\r\n                      : \"contactExpiryRaw\",\r\n                    `${dateRaw}`\r\n                  );\r\n                } else {\r\n                  console.error(\"parsed date is not a number\");\r\n                }\r\n              }\r\n              // take payload name and set as Key with the value being the parsed QR data. Every payload name is found\r\n              // between two colons in the parsed QR data\r\n              let indexStart = data.indexOf(\":\");\r\n              indexStart += 1;\r\n              let indexEnd = data.indexOf(\":\", indexStart + 1);\r\n              let keywordKey = data.substring(indexStart, indexEnd);\r\n              await AsyncStorage.setItem(keywordKey, data);\r\n              // Send analytics event when user submits a SafeKey pdf document\r\n              Analytics.logEvent(\"DocumentAdded\", {\r\n                type:\r\n                  keywordKey === \"BM.KEY\"\r\n                    ? \"SafeKey\"\r\n                    : keywordKey === \"BM.VAX\"\r\n                    ? \"Vaccination Certificate\"\r\n                    : keywordKey === \"BM.CONTACTKEY\"\r\n                    ? \"Contact Tracing Key\"\r\n                    : \"\",\r\n                purpose: \"User has added their SafeKey PDF document\",\r\n              });\r\n              // Navigate to a different screen while passing the parsed QR data with it\r\n              navigation.dispatch(\r\n                CommonActions.reset({\r\n                  index: 0,\r\n                  routes: [{ name: \"QR List\" }],\r\n                })\r\n              );\r\n              toast.show(\r\n                <View>\r\n                  <Text style={[styles.bold, { color: \"#fff\" }]}>\r\n                    {keywordKey === \"BM.KEY\"\r\n                      ? \"SafeKey added\"\r\n                      : keywordKey === \"BM.VAX\"\r\n                      ? \"Vaccination Certificate added\"\r\n                      : keywordKey === \"BM.CONTACTKEY\"\r\n                      ? \"Contact Tracing Key added\"\r\n                      : \"\"}\r\n                  </Text>\r\n                </View>,\r\n\r\n                {\r\n                  id: 3,\r\n                  type: \"success\",\r\n                  duration: 3500,\r\n                  animationType: \"zoom-in\",\r\n                }\r\n              );\r\n            }\r\n          };\r\n          handlePDFUpload();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!assets ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <ScrollView\r\n            contentContainerStyle={{\r\n              margin: \"auto\",\r\n              alignItems: \"center\",\r\n              paddingHorizontal: 20,\r\n            }}\r\n            style={[styles.scrollStyle]}\r\n          >\r\n            <Text\r\n              style={{\r\n                textAlign: \"center\",\r\n                marginBottom: 0.5,\r\n                fontSize: 16,\r\n                marginBottom: 16,\r\n                lineHeight: 24,\r\n              }}\r\n            >\r\n              Add your SafeKey to your wallet by selecting your{\" \"}\r\n              <Text style={{ fontWeight: \"bold\" }}>SafeKey, </Text>\r\n              <Text style={{ fontWeight: \"bold\" }}>Contact Tracing Key </Text>\r\n              or{\" \"}\r\n              <Text style={{ fontWeight: \"bold\" }}>\r\n                Vaccination Certificate PDF Document.\r\n              </Text>\r\n            </Text>\r\n            <Text\r\n              style={[\r\n                styles.text,\r\n                {\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 15,\r\n                  marginBottom: 15,\r\n                  textAlign: \"center\",\r\n                },\r\n              ]}\r\n            >\r\n              Select your PDF Document\r\n            </Text>\r\n            <TouchableOpacity\r\n              disabled={fileIsLoading}\r\n              style={[\r\n                styles.btn,\r\n                styles.shadow,\r\n                {\r\n                  backgroundColor: fileIsLoading ? \"#1a73ef80\" : \"#1971ef\",\r\n                },\r\n              ]}\r\n              onPress={PickDocument}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.center,\r\n                  {\r\n                    textAlign: \"center\",\r\n                    color: \"white\",\r\n                    fontSize: 17,\r\n                  },\r\n                ]}\r\n              >\r\n                <Image\r\n                  style={{ width: 20, height: 20, marginRight: 8 }}\r\n                  source={require(\"../assets/images/file-text.png\")}\r\n                />\r\n                Select\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <Text>\r\n              {ErrorInfo ? (\r\n                ErrorInfo\r\n              ) : (\r\n                <View style={{ height: 38, backgroundColor: \"#fff\" }}></View>\r\n              )}\r\n            </Text>\r\n          </ScrollView>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default SelectDocument;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Linking,\r\n} from \"react-native\";\r\n\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\n\r\nimport QrReader from \"react-qr-reader\";\r\nimport * as Analytics from \"expo-firebase-analytics\";\r\nimport { useToast } from \"react-native-toast-notifications\";\r\nimport { styles } from \"./styles\";\r\n\r\nconst window = Dimensions.get(\"window\");\r\nconst screen = Dimensions.get(\"screen\");\r\n\r\nconst QrScanScreen = ({ navigation }) => {\r\n  const [scanned, setScanned] = useState(false);\r\n  const [facing, setFacing] = useState(\"environment\");\r\n  const [invalidQR, setInvalidQR] = useState(false);\r\n  const [dimensions, setDimensions] = useState({ window, screen });\r\n  const toast = useToast();\r\n\r\n  const onChange = ({ window, screen }) => {\r\n    setDimensions({ window, screen });\r\n  };\r\n\r\n  const changeFacing = () => {\r\n    facing === \"environment\" ? setFacing(\"user\") : setFacing(\"environment\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    Dimensions.addEventListener(\"change\", onChange);\r\n    return () => {\r\n      Dimensions.removeEventListener(\"change\", onChange);\r\n    };\r\n  });\r\n\r\n  const handleBarCodeScanned = async (data) => {\r\n    const keywords = [\":BM.KEY:\", \":BM.VAX:\", \"BM.CONTACTKEY\"];\r\n    const keyRef = [\":BM.KEY:\", \"BM.CONTACTKEY\"];\r\n    if (data !== null) {\r\n      // Find keywords that match our array of items\r\n      if (keywords.some((keyword) => data.includes(keyword))) {\r\n        // Gets date from pass and checks to see if it's a number\r\n        if (keyRef.some((keyword) => data.includes(keyword))) {\r\n          // Get QR Keyword\r\n          let indexStart = data.indexOf(\":\");\r\n          indexStart += 1;\r\n          let indexEnd = data.indexOf(\":\", indexStart + 1);\r\n          let keywordKey = data.substring(indexStart, indexEnd);\r\n          // set start index for expiry date\r\n          let indexStartKey =\r\n            keywordKey === \"BM.KEY\"\r\n              ? data.indexOf(\":\", 130)\r\n              : keywordKey === \"BM.CONTACTKEY\"\r\n              ? data.indexOf(\":\", 142)\r\n              : null;\r\n          // set end index for expiry date\r\n          let indexEndKey = data.indexOf(\"/\");\r\n          // get expiry date value\r\n          let keywordBMKey = data.substring(indexStartKey, indexEndKey);\r\n          let keywordBMKeyFinal = keywordBMKey.slice(1);\r\n          if (!isNaN(keywordBMKeyFinal)) {\r\n            let year = parseInt(keywordBMKeyFinal.substr(0, 4), 10);\r\n            let day = parseInt(keywordBMKeyFinal.substr(6), 10);\r\n            let month = parseInt(keywordBMKeyFinal.substr(4, 2), 10);\r\n            let date = new Date(year, month - 1, day);\r\n            const formatYmd = (date) => date.toISOString().slice(0, 10);\r\n            let todayDate = Date.parse(formatYmd(new Date()));\r\n            var dateRaw = Date.parse(`${year}/${month}/${day}`);\r\n            let dayInMilliSeconds = 86400000;\r\n            if (dateRaw + dayInMilliSeconds <= todayDate) {\r\n              // If the date is in the past, show a toast\r\n              toast.show(\r\n                <View>\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      Linking.openURL(\"https://www.gov.bm/safekey\");\r\n                      toast.hide(1);\r\n                    }}\r\n                  >\r\n                    <Text style={[styles.bold, { color: \"#fff\" }]}>\r\n                      {keywordKey === \"BM.KEY\"\r\n                        ? \"This SafeKey has expired\"\r\n                        : keywordKey === \"BM.CONTACTKEY\"\r\n                        ? \"This Contact Tracing Key has expired\"\r\n                        : \"\"}\r\n                    </Text>\r\n                    <Text\r\n                      style={[\r\n                        styles.text,\r\n                        { color: \"#fff\", textAlign: \"center\" },\r\n                      ]}\r\n                    >\r\n                      Click here to renew it\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>,\r\n                {\r\n                  offsetBottom: 50,\r\n                  id: 1,\r\n                  position: \"bottom\",\r\n                  duration: 8000,\r\n                  type: \"normal\",\r\n                  normalColor: \"#ff4d4d\",\r\n                }\r\n              );\r\n              return navigation.goBack();\r\n            }\r\n\r\n            let options = {\r\n              weekday: \"long\",\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n            };\r\n            const dateQR = date.toLocaleString(\"en-US\", options);\r\n            await AsyncStorage.setItem(\r\n              keywordKey === \"BM.KEY\" ? \"passExpiry\" : \"contactExpiry\",\r\n              dateQR\r\n            );\r\n            await AsyncStorage.setItem(\r\n              keywordKey === \"BM.KEY\" ? \"passExpiryRaw\" : \"contactExpiryRaw\",\r\n              `${dateRaw}`\r\n            );\r\n          } else {\r\n            console.log(\"parsed date is not a number\");\r\n          }\r\n        }\r\n        // take payload name and set as Key with the value being the parsed QR data. Every payload name is found\r\n        // between two colons in the parsed QR data\r\n        let indexStart = data.indexOf(\":\");\r\n        indexStart += 1;\r\n        let indexEnd = data.indexOf(\":\", indexStart + 1);\r\n        let keywordKey = data.substring(indexStart, indexEnd);\r\n        await AsyncStorage.setItem(keywordKey, data);\r\n        setScanned(true);\r\n        Analytics.logEvent(\"DocumentScanned\", {\r\n          type:\r\n            keywordKey === \"BM.KEY\"\r\n              ? \"SafeKey\"\r\n              : keywordKey === \"BM.VAX\"\r\n              ? \"Vaccination Certificate\"\r\n              : keywordKey === \"BM.CONTACTKEY\"\r\n              ? \"Contact Tracing Key\"\r\n              : \"\",\r\n          purpose: \"User has scanned their SafeKey QR code.\",\r\n        });\r\n        // Navigate to a different screen while passing the parsed QR data with it\r\n        navigation.dispatch(\r\n          CommonActions.reset({ index: 0, routes: [{ name: \"QR List\" }] })\r\n        );\r\n        //\r\n        //\r\n        //\r\n        toast.show(\r\n          <View>\r\n            <Text style={[styles.bold, { color: \"#fff\" }]}>\r\n              {keywordKey === \"BM.KEY\"\r\n                ? \"SafeKey added\"\r\n                : keywordKey === \"BM.VAX\"\r\n                ? \"Vaccination Certificate added\"\r\n                : keywordKey === \"BM.CONTACTKEY\"\r\n                ? \"Contact Tracing Key added\"\r\n                : \"\"}\r\n            </Text>\r\n          </View>,\r\n\r\n          {\r\n            id: 3,\r\n            type: \"success\",\r\n            duration: 3500,\r\n            animationType: \"zoom-in\",\r\n          }\r\n        );\r\n      } else {\r\n        setInvalidQR(true);\r\n      }\r\n    } else {\r\n      setScanned(false);\r\n      setInvalidQR(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.container,\r\n        {\r\n          backgroundColor: \"#000\",\r\n          marginBottom: 0,\r\n        },\r\n      ]}\r\n    >\r\n      <View\r\n        style={[\r\n          styles.center,\r\n          {\r\n            backgroundColor: \"#000\",\r\n            fontSize: 16,\r\n            lineHeight: 50,\r\n            textAlign: \"center\",\r\n            position: \"relative\",\r\n            textAlignVertical: \"center\",\r\n            margin: 0,\r\n            zIndex: 10,\r\n            fontSize: 16,\r\n            flex: 1,\r\n            minHeight: 80,\r\n            marginBottom: 20,\r\n          },\r\n        ]}\r\n      >\r\n        <Text style={{ color: \"#f1f1f1\", marginBottom: 5, marginTop: 15 }}>\r\n          Scan your SafeKey Document QR code\r\n        </Text>\r\n        <Text style={{ color: \"#f1f1f1\" }}>Keep camera steady</Text>\r\n        <Text\r\n          style={{\r\n            color: invalidQR ? \"#ffbb33\" : \"#28a745\",\r\n            marginTop: 10,\r\n            fontFamily: \"OpenSans_600SemiBold\",\r\n          }}\r\n        >\r\n          {invalidQR ? \"INVALID QR\" : \"SCANNING\"}\r\n        </Text>\r\n      </View>\r\n\r\n      <QrReader\r\n        facingMode={facing}\r\n        onLoad={() => {\r\n          console.log(\"QR Reader Loaded\");\r\n        }}\r\n        delay={300}\r\n        onError={(error) => {\r\n          console.log(error.name);\r\n          if (error.name === \"NotAllowedError\") {\r\n            navigation.dispatch(\r\n              CommonActions.reset({ index: 0, routes: [{ name: \"NoCamera\" }] })\r\n            );\r\n          }\r\n        }}\r\n        onScan={(data) => {\r\n          scanned ? undefined : handleBarCodeScanned(data);\r\n        }}\r\n        style={{\r\n          width: dimensions.window.width < 565 ? \"100%\" : 510,\r\n          alignSelf: \"center\",\r\n        }}\r\n      />\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          marginTop: 20,\r\n        }}\r\n      >\r\n        <TouchableOpacity\r\n          onPress={changeFacing}\r\n          style={{\r\n            paddingHorizontal: 10,\r\n            alignSelf: \"center\",\r\n            backgroundColor: \"#1971ef\",\r\n            paddingVertical: 10,\r\n            borderRadius: 5,\r\n            marginBottom: 25,\r\n            marginTop: 25,\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              color: \"white\",\r\n              textAlign: \"center\",\r\n              letterSpacing: 1,\r\n              fontFamily: \"OpenSans_400Regular\",\r\n            }}\r\n          >\r\n            Switch Camera\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default QrScanScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, TouchableOpacity, Text, Linking } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { removeValue } from \"./script\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { styles } from \"../../screens/styles\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nconst QrTile = (props) => {\r\n  const [tileBg, setTileBg] = useState(\"#000\");\r\n  const [tileBgTwo, setTileBgTwo] = useState(\"#000\");\r\n  const [screenSkipSafeKey, setScreenSkipSafeKey] = useState(false);\r\n  const [screenSkipVaccineKey, setScreenSkipVaccineKey] = useState(false);\r\n  const [screenSkipContactKey, setScreenSkipContactKey] = useState(false);\r\n  const [passExpired, setPassExpired] = useState(false);\r\n  const [contactKeyExpired, setContactKeyExpired] = useState(false);\r\n\r\n  // Get safekey expiry date. set passExpired state to true if expired\r\n  useEffect(() => {\r\n    try {\r\n      async function getSafekeyExpiry() {\r\n        const passExpiry = await AsyncStorage.getItem(\"passExpiryRaw\");\r\n        if (passExpiry !== null) {\r\n          const formatYmd = (date) => date.toISOString().slice(0, 10);\r\n          let todayDate = Date.parse(formatYmd(new Date()));\r\n          let dayInMilliSeconds = 86400000;\r\n          if (passExpiry > todayDate) {\r\n            setPassExpired(false);\r\n          } else if (passExpiry == todayDate) {\r\n            setPassExpired(false);\r\n          } else if (parseInt(passExpiry) + dayInMilliSeconds <= todayDate) {\r\n            setPassExpired(true);\r\n          }\r\n        }\r\n      }\r\n      getSafekeyExpiry();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getContactKeyExpiry() {\r\n        const contactKeyExpiry = await AsyncStorage.getItem(\"contactExpiryRaw\");\r\n        if (contactKeyExpiry !== null) {\r\n          const formatYmd = (date) => date.toISOString().slice(0, 10);\r\n          let todayDate = Date.parse(formatYmd(new Date()));\r\n          let dayInMilliSeconds = 86400000;\r\n          if (contactKeyExpiry > todayDate) {\r\n            setContactKeyExpired(false);\r\n          } else if (contactKeyExpiry == todayDate) {\r\n            setContactKeyExpired(false);\r\n          } else if (\r\n            parseInt(contactKeyExpiry) + dayInMilliSeconds <=\r\n            todayDate\r\n          ) {\r\n            setContactKeyExpired(true);\r\n          }\r\n        }\r\n      }\r\n      getContactKeyExpiry();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, []);\r\n\r\n  // Get safekey notice screen skip boolean\r\n  useEffect(() => {\r\n    try {\r\n      async function getSafekeyNoticeStatus() {\r\n        const value = await AsyncStorage.getItem(\"no_notice_safekey\");\r\n        if (value !== null) {\r\n          setScreenSkipSafeKey(value);\r\n        }\r\n      }\r\n      getSafekeyNoticeStatus();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, []);\r\n\r\n  // Get Vaccination notice screen skip boolean\r\n  useEffect(() => {\r\n    try {\r\n      async function getVaccineNoticeStatus() {\r\n        const value = await AsyncStorage.getItem(\"no_notice_vaccine\");\r\n        if (value !== null) {\r\n          setScreenSkipVaccineKey(value);\r\n        }\r\n      }\r\n      getVaccineNoticeStatus();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, []);\r\n\r\n  // Get Contact Tracing notice screen skip boolean\r\n  useEffect(() => {\r\n    try {\r\n      async function getContactNoticeStatus() {\r\n        const value = await AsyncStorage.getItem(\"no_notice_contact\");\r\n        if (value !== null) {\r\n          setScreenSkipContactKey(value);\r\n        }\r\n      }\r\n      getContactNoticeStatus();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, []);\r\n\r\n  const myRef = React.createRef();\r\n\r\n  const showMenu = () => {\r\n    myRef.current.style.display = \"flex\";\r\n    document.addEventListener(\"click\", hideMenu);\r\n  };\r\n\r\n  const hideMenu = () => {\r\n    if (myRef.current) {\r\n      myRef.current.style.display = \"none\";\r\n      document.removeEventListener(\"click\", hideMenu);\r\n    } else return;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.name == \"Vaccination Certificate\") {\r\n      setTileBg(\"#fc9cc7\");\r\n      setTileBgTwo(\"#fc9cc7\");\r\n    } else if (props.name == \"SafeKey\") {\r\n      setTileBg(\"#5299e1\");\r\n      setTileBgTwo(\"#66b0ff\");\r\n    } else if (props.name == \"Contact Tracing Key\") {\r\n      setTileBg(\"#66c45f\");\r\n      setTileBgTwo(\"#81cf7d\");\r\n    }\r\n  }, [props.name]);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <View style={{ width: \"100%\" }}>\r\n      <LinearGradient\r\n        start={{ x: 1, y: 0 }}\r\n        end={{ x: 0, y: 0 }}\r\n        colors={[tileBg, tileBgTwo]}\r\n        style={[\r\n          styles.shadow,\r\n          {\r\n            width: \"100%\",\r\n            marginBottom: 15,\r\n            paddingLeft: 15,\r\n            borderRadius: 10,\r\n          },\r\n        ]}\r\n      >\r\n        <TouchableOpacity\r\n          style={{\r\n            justifyContent: \"space-between\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n          onPress={() => {\r\n            if (props.infoScreen === \"SafeKey Notice\") {\r\n              if (screenSkipSafeKey) {\r\n                navigation.navigate(\"SafeKey QR\");\r\n              } else if (!screenSkipSafeKey) {\r\n                navigation.navigate(\"SafeKey Notice\");\r\n              }\r\n            }\r\n            if (props.infoScreen === \"Vaccination Notice\") {\r\n              if (screenSkipVaccineKey) {\r\n                navigation.navigate(\"Vaccination Certificate QR\");\r\n              } else if (!screenSkipVaccineKey) {\r\n                navigation.navigate(\"Vaccination Notice\");\r\n              }\r\n            }\r\n            if (props.infoScreen === \"Contact Tracing Notice\") {\r\n              if (screenSkipContactKey) {\r\n                navigation.navigate(\"Contact Tracing Key QR\");\r\n              } else if (!screenSkipContactKey) {\r\n                navigation.navigate(\"Contact Tracing Notice\");\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          <View style={{ paddingVertical: 15 }}>\r\n            <Text\r\n              style={{\r\n                fontFamily: \"OpenSans_600SemiBold\",\r\n                color: \"white\",\r\n                textAlign: \"left\",\r\n                fontSize: 16,\r\n              }}\r\n            >\r\n              {props.name}{\" \"}\r\n              {(props.name === \"SafeKey\" && passExpired === true) ||\r\n              (props.name === \"Contact Tracing Key\" &&\r\n                contactKeyExpired === true) ? (\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    Linking.openURL(\"https://www.gov.bm/safekey\");\r\n                  }}\r\n                  style={[\r\n                    styles.shadow,\r\n                    {\r\n                      backgroundColor: \"#ae1613\",\r\n                      paddingHorizontal: 5,\r\n                      paddingVertical: 2,\r\n                      borderRadius: 5,\r\n                      marginLeft: 2,\r\n                      margin: \"auto\",\r\n                      borderColor: \"#fff\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  Expired\r\n                </TouchableOpacity>\r\n              ) : (\r\n                <Text></Text>\r\n              )}\r\n            </Text>\r\n          </View>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              showMenu();\r\n            }}\r\n            style={[\r\n              styles.center,\r\n              {\r\n                height: \"100%\",\r\n                width: 50,\r\n                flexDirection: \"row\",\r\n              },\r\n            ]}\r\n          >\r\n            <Ionicons name=\"ios-ellipsis-vertical\" size={24} color=\"white\" />\r\n          </TouchableOpacity>\r\n          <View\r\n            style={[\r\n              styles.shadow,\r\n              {\r\n                display: \"none\",\r\n                flexDirection: \"column\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: 5,\r\n                position: \"absolute\",\r\n                right: 40,\r\n                top: 11,\r\n              },\r\n            ]}\r\n            ref={myRef}\r\n          >\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                removeValue(props.type);\r\n                props.removeItem();\r\n              }}\r\n              style={{\r\n                paddingHorizontal: 20,\r\n                paddingVertical: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontFamily: \"OpenSans_400Regular\", color: \"#dc3545\" }}\r\n              >\r\n                Delete\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default QrTile;\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport * as Analytics from \"expo-firebase-analytics\";\r\n\r\nexport const removeValue = async (value) => {\r\n  try {\r\n    if (value === \"BM.KEY\") {\r\n      await AsyncStorage.removeItem(\"passExpiry\");\r\n      await AsyncStorage.removeItem(\"passExpiryRaw\");\r\n      await AsyncStorage.removeItem(\"no_notice_safekey\");\r\n    } else if (value === \"BM.VAX\") {\r\n      await AsyncStorage.removeItem(\"no_notice_vaccine\");\r\n    } else if (value === \"BM.CONTACTKEY\") {\r\n      await AsyncStorage.removeItem(\"contactExpiry\");\r\n      await AsyncStorage.removeItem(\"contactExpiryRaw\");\r\n      await AsyncStorage.removeItem(\"no_notice_contact\");\r\n    }\r\n    await AsyncStorage.removeItem(value);\r\n    // Send analytics when user deletes safekey\r\n    Analytics.logEvent(\"QrDeleted\", {\r\n      type: value === \"BM.KEY\" ? \"SafeKey\" : \"Vaccination Certificate\",\r\n      purpose: \"user deleted a safekey\",\r\n    });\r\n  } catch (e) {\r\n    alert(e);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, Image, ScrollView } from \"react-native\";\r\nimport { styles } from \"./styles\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useAssets } from \"expo-asset\";\r\nimport Loading from \"./Loading\";\r\n\r\nimport QrTile from \"../components/QrTile/QrTile\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport {\r\n  useFonts,\r\n  OpenSans_400Regular,\r\n  OpenSans_600SemiBold,\r\n} from \"@expo-google-fonts/open-sans\";\r\n\r\nimport {\r\n  FloatingMenu,\r\n  MainButton,\r\n  ChildButton,\r\n} from \"react-floating-button-menu\";\r\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\nconst QrList = ({ navigation }) => {\r\n  const [vax, setVax] = useState(undefined);\r\n  const [passkey, setPasskey] = useState(undefined);\r\n  const [contactKey, setContactKey] = useState(undefined);\r\n  const [passExists, setPassExists] = useState();\r\n  const [vaxExists, setVaxExists] = useState();\r\n  const [contactKeyExists, setContactKeyExists] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const [assets] = useAssets([\r\n    require(\"../assets/images/file-text.png\"),\r\n    require(\"../assets/images/camera.png\"),\r\n  ]);\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    OpenSans_400Regular,\r\n    OpenSans_600SemiBold,\r\n  });\r\n\r\n  const noVaxExists = () => {\r\n    setVaxExists(false);\r\n  };\r\n\r\n  const noPassExists = () => {\r\n    setPassExists(false);\r\n  };\r\n  const noContactKeyExists = () => {\r\n    setContactKeyExists(false);\r\n  };\r\n\r\n  // if one or two variables are true then return true. If three variables are true then return false.\r\n  const checkExists = () => {\r\n    if (\r\n      vaxExists === true &&\r\n      passExists === true &&\r\n      contactKeyExists === true\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getPasskey() {\r\n        const value = await AsyncStorage.getItem(\"BM.KEY\");\r\n        if (value !== null) {\r\n          setPasskey(value);\r\n          setPassExists(true);\r\n        } else {\r\n          setPassExists(false);\r\n        }\r\n      }\r\n      getPasskey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [passExists]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getVax() {\r\n        const value = await AsyncStorage.getItem(\"BM.VAX\");\r\n        if (value !== null) {\r\n          setVax(value);\r\n          setVaxExists(true);\r\n        } else {\r\n          setVaxExists(false);\r\n        }\r\n      }\r\n      getVax();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getContactKey() {\r\n        const value = await AsyncStorage.getItem(\"BM.CONTACTKEY\");\r\n        if (value !== null) {\r\n          setContactKey(value);\r\n          setContactKeyExists(true);\r\n        } else {\r\n          setContactKeyExists(false);\r\n        }\r\n      }\r\n      getContactKey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [contactKeyExists]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      vaxExists === false &&\r\n      passExists === false &&\r\n      contactKeyExists === false\r\n    ) {\r\n      navigation.dispatch(StackActions.replace(\"Home\"));\r\n    }\r\n  }, [vaxExists, passExists, contactKeyExists]);\r\n\r\n  return (\r\n    <ScrollView style={styles.scrollStyle}>\r\n      {!assets && !fontsLoaded ? (\r\n        <Loading />\r\n      ) : (\r\n        <View style={styles.containerTop}>\r\n          <View\r\n            style={[\r\n              styles.center,\r\n              {\r\n                alignSelf: \"center\",\r\n                backgroundColor: \"#f9f9f9\",\r\n                padding: 20,\r\n                paddingBottom: 20,\r\n                marginBottom: 25,\r\n                marginTop: 5,\r\n                width: \"100%\",\r\n                maxWidth: 650,\r\n                borderRadius: 10,\r\n                borderWidth: 1,\r\n                borderColor: \"#dadada\",\r\n              },\r\n            ]}\r\n          >\r\n            <Text>\r\n              <Text\r\n                style={{\r\n                  fontSize: 18,\r\n                  alignSelf: \"flex-start\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                  color: \"#919191\",\r\n                  display: \"block\",\r\n                }}\r\n              >\r\n                Guide\r\n              </Text>\r\n              {\"\\n\"}\r\n              <Text style={{ fontSize: 14, color: \"#919191\" }}>{\"\\u2022\"}</Text>\r\n              <Text style={qrlist.infoPoints}>\r\n                {\" \"}\r\n                SafeKey Wallet currently supports three QR Codes. Vaccination\r\n                Certificate, SafeKey and Contact Tracing Key.\r\n              </Text>\r\n              {\"\\n\"}\r\n              <Text style={{ display: \"block\" }}> </Text>\r\n              <Text style={{ fontSize: 14, color: \"#919191\" }}>{\"\\u2022\"}</Text>\r\n              <Text style={qrlist.infoPoints}>\r\n                {\" \"}\r\n                Select the QR you want to present. Read the information on the\r\n                next screen carefully, then continue.\r\n              </Text>\r\n              {\"\\n\"}\r\n              <Text style={{ display: \"block\" }}> </Text>\r\n              <Text style={{ fontSize: 14, color: \"#919191\" }}>{\"\\u2022\"}</Text>\r\n              <Text style={qrlist.infoPoints}>\r\n                {\" \"}\r\n                When your SafeKey expires, you can add another by first deleting\r\n                the expired one, then clicking the plus button and selecting\r\n                either the camera button or the document button.\r\n              </Text>\r\n            </Text>\r\n          </View>\r\n          {vaxExists ? (\r\n            <QrTile\r\n              name=\"Vaccination Certificate\"\r\n              type=\"BM.VAX\"\r\n              removeItem={noVaxExists}\r\n              infoScreen=\"Vaccination Notice\"\r\n              data={vax}\r\n            />\r\n          ) : (\r\n            <Text></Text>\r\n          )}\r\n          {passExists ? (\r\n            <QrTile\r\n              name=\"SafeKey\"\r\n              type=\"BM.KEY\"\r\n              removeItem={noPassExists}\r\n              infoScreen=\"SafeKey Notice\"\r\n              data={passkey}\r\n            />\r\n          ) : (\r\n            <Text></Text>\r\n          )}\r\n          {contactKeyExists ? (\r\n            <QrTile\r\n              name=\"Contact Tracing Key\"\r\n              type=\"BM.CONTACTKEY\"\r\n              removeItem={noContactKeyExists}\r\n              infoScreen=\"Contact Tracing Notice\"\r\n              data={contactKey}\r\n            />\r\n          ) : (\r\n            <Text></Text>\r\n          )}\r\n\r\n          {checkExists() ? (\r\n            <View\r\n              style={{\r\n                position: \"sticky\",\r\n                alignSelf: \"flex-end\",\r\n              }}\r\n            >\r\n              <FloatingMenu\r\n                slideSpeed={500}\r\n                direction=\"left\"\r\n                spacing={8}\r\n                isOpen={isOpen}\r\n                style={(qrlist.btnCircle, styles.shadow)}\r\n              >\r\n                <MainButton\r\n                  iconResting={<Feather name=\"plus\" size={24} color=\"white\" />}\r\n                  iconActive={\r\n                    <Ionicons name=\"close-outline\" size={24} color=\"white\" />\r\n                  }\r\n                  background=\"#1971ef\"\r\n                  onClick={() => setIsOpen(!isOpen)}\r\n                  size={56}\r\n                />\r\n                <ChildButton\r\n                  icon={\r\n                    <Image\r\n                      id=\"camera\"\r\n                      style={{ height: 20, width: 20 }}\r\n                      source={require(\"../assets/images/camera.png\")}\r\n                    />\r\n                  }\r\n                  background=\"#1971ef\"\r\n                  size={40}\r\n                  onClick={() => {\r\n                    setIsOpen(!isOpen);\r\n                    navigation.navigate(\"Scan QR\");\r\n                  }}\r\n                />\r\n                <ChildButton\r\n                  icon={\r\n                    <Image\r\n                      style={{ width: 20, height: 20 }}\r\n                      source={require(\"../assets/images/file-text.png\")}\r\n                    />\r\n                  }\r\n                  background=\"#1971ef\"\r\n                  size={40}\r\n                  onClick={() => {\r\n                    setIsOpen(!isOpen);\r\n                    navigation.navigate(\"Select Document\");\r\n                  }}\r\n                />\r\n              </FloatingMenu>\r\n            </View>\r\n          ) : (\r\n            <Text></Text>\r\n          )}\r\n        </View>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n};\r\nconst qrlist = StyleSheet.create({\r\n  btnCircle: {\r\n    width: 55,\r\n    height: 55,\r\n    borderRadius: 50,\r\n    position: \"absolute\",\r\n    bottom: 20,\r\n    right: 20,\r\n    backgroundColor: \"#1971ef\",\r\n  },\r\n  infoPoints: {\r\n    fontSize: 10,\r\n    fontFamily: \"OpenSans_400Regular\",\r\n    color: \"#919191\",\r\n    marginBottom: -10,\r\n  },\r\n});\r\n\r\nexport default QrList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, TouchableOpacity, Text, ScrollView } from \"react-native\";\r\n\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { styles } from \"./styles\";\r\nimport Checkbox from \"expo-checkbox\";\r\n\r\nconst PassInfo = ({ navigation }) => {\r\n  const [passExists, setPassExists] = useState(null);\r\n  const [isChecked, setChecked] = useState(false);\r\n  const [checkboxAvailable, setCheckboxAvailable] = useState(false);\r\n  Checkbox.isAvailableAsync().then((isAvailable) => {\r\n    if (isAvailable) {\r\n      setCheckboxAvailable(true);\r\n    }\r\n  });\r\n\r\n  const skipScreen = async () => {\r\n    await AsyncStorage.setItem(\"no_notice_safekey\", true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getPasskey() {\r\n        const value = await AsyncStorage.getItem(\"BM.KEY\");\r\n        if (value !== null) {\r\n          setPassExists(true);\r\n        } else {\r\n          setPassExists(false);\r\n        }\r\n      }\r\n      getPasskey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [passExists]);\r\n\r\n  useEffect(() => {\r\n    if (passExists === false) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [passExists]);\r\n  return (\r\n    <>\r\n      <ScrollView\r\n        contentContainerStyle={{\r\n          margin: \"auto\",\r\n        }}\r\n        style={[styles.scrollStyle]}\r\n      >\r\n        <View style={styles.container}>\r\n          <View>\r\n            <Text style={styles.noticeHeader}>\r\n              By allowing your SafeKey to be scanned you're agreeing to share\r\n              the following information:\r\n            </Text>\r\n            <Text style={styles.li}>\r\n              1. Initials{\"\\n\"}2. Date of Birth{\"\\n\"}3. Expiry\r\n            </Text>\r\n          </View>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              if (isChecked) {\r\n                skipScreen();\r\n              }\r\n              navigation.navigate(\"SafeKey QR\");\r\n            }}\r\n            style={[\r\n              styles.btn,\r\n              styles.shadow,\r\n              { backgroundColor: \"#1971ef\", maxWidth: 350, marginBottom: 25 },\r\n            ]}\r\n          >\r\n            <Text style={[styles.btnText, { color: \"#fff\" }]}>Continue</Text>\r\n          </TouchableOpacity>\r\n          <>\r\n            {checkboxAvailable ? (\r\n              <View\r\n                style={[\r\n                  styles.center,\r\n                  { flexDirection: \"row\", marginBottom: 10 },\r\n                ]}\r\n              >\r\n                <Text style={[styles.text, { marginEnd: 8 }]}>\r\n                  Don't show again\r\n                </Text>\r\n                <Checkbox value={isChecked} onValueChange={setChecked} />\r\n              </View>\r\n            ) : null}\r\n          </>\r\n        </View>\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PassInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, TouchableOpacity, Text, ScrollView } from \"react-native\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { styles } from \"./styles\";\r\nimport Checkbox from \"expo-checkbox\";\r\n\r\nconst VaxInfo = ({ navigation }) => {\r\n  const [vaxExists, setVaxExists] = useState(null);\r\n  const [isChecked, setChecked] = useState(false);\r\n  const [checkboxAvailable, setCheckboxAvailable] = useState(false);\r\n  Checkbox.isAvailableAsync().then((isAvailable) => {\r\n    if (isAvailable) {\r\n      setCheckboxAvailable(true);\r\n    }\r\n  });\r\n  const skipScreenVaccine = async () => {\r\n    await AsyncStorage.setItem(\"no_notice_vaccine\", true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getVax() {\r\n        const value = await AsyncStorage.getItem(\"BM.VAX\");\r\n        if (value !== null) {\r\n          setVaxExists(true);\r\n        } else {\r\n          setVaxExists(false);\r\n        }\r\n      }\r\n      getVax();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  useEffect(() => {\r\n    if (vaxExists === false) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  return (\r\n    <>\r\n      <ScrollView\r\n        contentContainerStyle={{\r\n          margin: \"auto\",\r\n        }}\r\n        style={[styles.scrollStyle]}\r\n      >\r\n        <View style={styles.container}>\r\n          <View>\r\n            <Text style={styles.noticeHeader}>\r\n              By allowing your Vaccination Certificate to be scanned you're\r\n              agreeing to share the following information:\r\n            </Text>\r\n            <Text style={styles.li}>\r\n              1. Full Name{\"\\n\"}2. Date of Birth{\"\\n\"}3. Expiry{\"\\n\"}4. Vaccine\r\n              Type\r\n              {\"\\n\"}\r\n              5. Vaccine Dosage{\"\\n\"}6. Date of Vaccination\r\n            </Text>\r\n          </View>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              if (isChecked) {\r\n                skipScreenVaccine();\r\n              }\r\n              navigation.navigate(\"Vaccination Certificate QR\");\r\n            }}\r\n            style={[\r\n              styles.btn,\r\n              styles.shadow,\r\n              { backgroundColor: \"#1971ef\", maxWidth: 350, marginBottom: 25 },\r\n            ]}\r\n          >\r\n            <Text style={[styles.btnText, { color: \"#fff\" }]}>Continue</Text>\r\n          </TouchableOpacity>\r\n          <>\r\n            {checkboxAvailable ? (\r\n              <View\r\n                style={[\r\n                  styles.center,\r\n                  { flexDirection: \"row\", marginBottom: 10 },\r\n                ]}\r\n              >\r\n                <Text style={[styles.text, { marginEnd: 8 }]}>\r\n                  Don't show again\r\n                </Text>\r\n                <Checkbox value={isChecked} onValueChange={setChecked} />\r\n              </View>\r\n            ) : null}\r\n          </>\r\n        </View>\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VaxInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, TouchableOpacity, Text, ScrollView } from \"react-native\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { styles } from \"./styles\";\r\nimport Checkbox from \"expo-checkbox\";\r\n\r\nconst ContactTracingInfo = ({ navigation }) => {\r\n  const [contactKeyExists, setContactKeyExists] = useState(null);\r\n  const [isChecked, setChecked] = useState(false);\r\n  const [checkboxAvailable, setCheckboxAvailable] = useState(false);\r\n  Checkbox.isAvailableAsync().then((isAvailable) => {\r\n    if (isAvailable) {\r\n      setCheckboxAvailable(true);\r\n    }\r\n  });\r\n\r\n  const skipScreenContactKey = async () => {\r\n    await AsyncStorage.setItem(\"no_notice_contact\", true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getContactKey() {\r\n        const value = await AsyncStorage.getItem(\"BM.CONTACTKEY\");\r\n        if (value !== null) {\r\n          setContactKeyExists(true);\r\n        } else {\r\n          setContactKeyExists(false);\r\n        }\r\n      }\r\n      getContactKey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [contactKeyExists]);\r\n\r\n  useEffect(() => {\r\n    if (contactKeyExists === false) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [contactKeyExists]);\r\n\r\n  return (\r\n    <>\r\n      <ScrollView\r\n        contentContainerStyle={{\r\n          margin: \"auto\",\r\n        }}\r\n        style={[styles.scrollStyle]}\r\n      >\r\n        <View style={styles.container}>\r\n          <View>\r\n            <Text style={styles.noticeHeader}>\r\n              By allowing your Contact Tracing Key to be scanned you're agreeing\r\n              to share the following information:\r\n            </Text>\r\n            <Text style={styles.li}>\r\n              1. Initials{\"\\n\"}2. Date of Birth{\"\\n\"}3. Expiry\r\n            </Text>\r\n          </View>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              if (isChecked) {\r\n                skipScreenContactKey();\r\n              }\r\n              navigation.navigate(\"Contact Tracing Key QR\");\r\n            }}\r\n            style={[\r\n              styles.btn,\r\n              styles.shadow,\r\n              { backgroundColor: \"#1971ef\", maxWidth: 350, marginBottom: 25 },\r\n            ]}\r\n          >\r\n            <Text style={[styles.btnText, { color: \"#fff\" }]}>Continue</Text>\r\n          </TouchableOpacity>\r\n          <>\r\n            {checkboxAvailable ? (\r\n              <View\r\n                style={[\r\n                  styles.center,\r\n                  { flexDirection: \"row\", marginBottom: 10 },\r\n                ]}\r\n              >\r\n                <Text style={[styles.text, { marginEnd: 8 }]}>\r\n                  Don't show again\r\n                </Text>\r\n                <Checkbox value={isChecked} onValueChange={setChecked} />\r\n              </View>\r\n            ) : null}\r\n          </>\r\n        </View>\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactTracingInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, TouchableOpacity, Image, ScrollView } from \"react-native\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\nimport { styles } from \"./styles\";\r\n\r\nimport QRCode from \"react-native-qrcode-svg\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst ShowQrPass = ({ navigation }) => {\r\n  const [passExists, setPassExists] = useState(null);\r\n  const [passkey, setPasskey] = useState(null);\r\n  const [passExpiry, setPassExpiry] = useState(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getPasskey() {\r\n        const value = await AsyncStorage.getItem(\"BM.KEY\");\r\n        if (value !== null) {\r\n          setPassExists(true);\r\n          setPasskey(value);\r\n        } else {\r\n          setPassExists(false);\r\n        }\r\n      }\r\n      getPasskey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [passExists]);\r\n\r\n  useEffect(() => {\r\n    if (passExists === false) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [passExists]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getPassExpiry() {\r\n        const value = await AsyncStorage.getItem(\"passExpiry\");\r\n        if (value !== null) {\r\n          setPassExpiry(value);\r\n        }\r\n      }\r\n      getPassExpiry();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!passkey ? (\r\n        <Loading />\r\n      ) : (\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            margin: \"auto\",\r\n          }}\r\n          style={styles.scrollStyle}\r\n        >\r\n          <View style={styles.container}>\r\n            <Text style={styles.QrHeader}>SafeKey</Text>\r\n            <View style={styles.center}>\r\n              <View\r\n                style={[\r\n                  styles.center,\r\n                  {\r\n                    borderWidth: 5,\r\n                    borderColor: \"#63acfa\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Image\r\n                  style={styles.bmQrLogo}\r\n                  source={require(\"../assets/images/bm-logo.svg\")}\r\n                />\r\n                <QRCode\r\n                  value={passkey}\r\n                  size={250}\r\n                  quietZone={10}\r\n                  color={\"#121212\"}\r\n                />\r\n              </View>\r\n              {!passExpiry ? (\r\n                <Text></Text>\r\n              ) : (\r\n                <Text style={[styles.bold, { marginTop: 20, fontSize: 18 }]}>\r\n                  Expiry:{\" \"}\r\n                  <Text style={[styles.text, { fontSize: 18 }]}>\r\n                    {passExpiry}\r\n                  </Text>\r\n                </Text>\r\n              )}\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                navigation.dispatch(\r\n                  CommonActions.reset({\r\n                    index: 0,\r\n                    routes: [{ name: \"QR List\" }],\r\n                  })\r\n                )\r\n              }\r\n              style={[\r\n                styles.btn,\r\n                styles.shadow,\r\n                {\r\n                  backgroundColor: \"#1971ef\",\r\n                  marginTop: 20,\r\n                  marginBottom: 25,\r\n                  maxWidth: 250,\r\n                },\r\n              ]}\r\n            >\r\n              <Text style={[styles.btnText, { color: \"#fff\" }]}>Go Back</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </ScrollView>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowQrPass;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, TouchableOpacity, Image, ScrollView } from \"react-native\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\nimport { styles } from \"./styles\";\r\nimport QRCode from \"react-native-qrcode-svg\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst ShowQrVax = ({ navigation }) => {\r\n  const [vaxExists, setVaxExists] = useState(null);\r\n  const [vax, setVax] = useState(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getVax() {\r\n        const value = await AsyncStorage.getItem(\"BM.VAX\");\r\n        if (value !== null) {\r\n          setVaxExists(true);\r\n          setVax(value);\r\n        } else {\r\n          setVaxExists(false);\r\n        }\r\n      }\r\n      getVax();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  useEffect(() => {\r\n    if (vaxExists === false) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  return (\r\n    <>\r\n      {!vax ? (\r\n        <Loading />\r\n      ) : (\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            margin: \"auto\",\r\n          }}\r\n          style={styles.scrollStyle}\r\n        >\r\n          <View style={styles.container}>\r\n            <Text style={styles.QrHeader}>Vaccination Certificate</Text>\r\n            <View style={styles.center}>\r\n              <View\r\n                style={[\r\n                  styles.center,\r\n                  {\r\n                    borderWidth: 5,\r\n                    borderColor: \"#fc9cc7\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Image\r\n                  style={styles.bmQrLogo}\r\n                  source={require(\"../assets/images/bm-logo.svg\")}\r\n                />\r\n                <QRCode\r\n                  value={vax}\r\n                  size={250}\r\n                  quietZone={10}\r\n                  color={\"#121212\"}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                navigation.dispatch(\r\n                  CommonActions.reset({\r\n                    index: 0,\r\n                    routes: [{ name: \"QR List\" }],\r\n                  })\r\n                )\r\n              }\r\n              style={[\r\n                styles.btn,\r\n                styles.shadow,\r\n                {\r\n                  backgroundColor: \"#1971ef\",\r\n                  marginTop: 30,\r\n                  marginBottom: 25,\r\n                  maxWidth: 250,\r\n                },\r\n              ]}\r\n            >\r\n              <Text style={[styles.btnText, { color: \"#fff\" }]}>Go Back</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </ScrollView>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowQrVax;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, TouchableOpacity, Image, ScrollView } from \"react-native\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\nimport { styles } from \"./styles\";\r\nimport QRCode from \"react-native-qrcode-svg\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst ShowQrContactKey = ({ navigation }) => {\r\n  const [contactKeyExists, setContactKeyExists] = useState(null);\r\n  const [contactKey, setContactKey] = useState(null);\r\n  const [contactExpiry, setContactExpiry] = useState();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getContactKey() {\r\n        const value = await AsyncStorage.getItem(\"BM.CONTACTKEY\");\r\n        if (value !== null) {\r\n          setContactKeyExists(true);\r\n          setContactKey(value);\r\n        } else {\r\n          setContactKeyExists(false);\r\n        }\r\n      }\r\n      getContactKey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [contactKeyExists]);\r\n\r\n  useEffect(() => {\r\n    if (contactKeyExists === false) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [contactKeyExists]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getContactExpiry() {\r\n        const value = await AsyncStorage.getItem(\"contactExpiry\");\r\n        if (value !== null) {\r\n          setContactExpiry(value);\r\n        }\r\n      }\r\n      getContactExpiry();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!contactKey ? (\r\n        <Loading />\r\n      ) : (\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            margin: \"auto\",\r\n          }}\r\n          style={styles.scrollStyle}\r\n        >\r\n          <View style={[styles.container]}>\r\n            <Text style={styles.QrHeader}>Contact Tracing Key</Text>\r\n            <View style={styles.center}>\r\n              <View\r\n                style={[\r\n                  styles.center,\r\n                  {\r\n                    borderWidth: 5,\r\n                    borderColor: \"#66c45f\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Image\r\n                  style={styles.bmQrLogo}\r\n                  source={require(\"../assets/images/bm-logo.svg\")}\r\n                />\r\n                <QRCode\r\n                  value={contactKey}\r\n                  size={250}\r\n                  quietZone={10}\r\n                  color={\"#121212\"}\r\n                />\r\n              </View>\r\n              {!contactExpiry ? (\r\n                <Text></Text>\r\n              ) : (\r\n                <Text style={[styles.bold, { marginTop: 20, fontSize: 18 }]}>\r\n                  Expiry:{\" \"}\r\n                  <Text style={[styles.text, { fontSize: 18 }]}>\r\n                    {contactExpiry}\r\n                  </Text>\r\n                </Text>\r\n              )}\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                navigation.dispatch(\r\n                  CommonActions.reset({\r\n                    index: 0,\r\n                    routes: [{ name: \"QR List\" }],\r\n                  })\r\n                )\r\n              }\r\n              style={[\r\n                styles.btn,\r\n                styles.shadow,\r\n                {\r\n                  backgroundColor: \"#1971ef\",\r\n                  marginTop: 30,\r\n                  marginBottom: 25,\r\n                  maxWidth: 250,\r\n                },\r\n              ]}\r\n            >\r\n              <Text style={[styles.btnText, { color: \"#fff\" }]}>Go Back</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </ScrollView>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowQrContactKey;\r\n","import React from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\nimport { styles } from \"./styles\";\r\n\r\nconst NotFound = ({ navigation }) => {\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <Text\r\n          style={{\r\n            fontSize: 30,\r\n            fontFamily: \"OpenSans_600SemiBold\",\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          Oops\r\n        </Text>\r\n        <Text style={[styles.text, { textAlign: \"center\" }]}>\r\n          The page you were looking for was not found.\r\n        </Text>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.dispatch(\r\n              CommonActions.reset({ index: 0, routes: [{ name: \"Home\" }] })\r\n            );\r\n          }}\r\n          style={[\r\n            styles.shadow,\r\n            styles.btn,\r\n            {\r\n              backgroundColor: \"#1971ef\",\r\n              marginTop: 10,\r\n            },\r\n          ]}\r\n        >\r\n          <Text style={[styles.btnText, { color: \"#fff\" }]}>Go Back</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Image,\r\n  StyleSheet,\r\n  Linking,\r\n} from \"react-native\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\nimport DetectRTC from \"detectrtc\";\r\nimport { useAssets } from \"expo-asset\";\r\nimport Loading from \"./Loading\";\r\nimport { styles } from \"./styles\";\r\n\r\nconst NoCamera = ({ navigation }) => {\r\n  const [learnUrl, setLearnUrl] = useState(null);\r\n\r\n  const [assets] = useAssets([require(\"../assets/images/nocam.png\")]);\r\n\r\n  useEffect(() => {\r\n    DetectRTC.load(function () {\r\n      if (DetectRTC.browser.isChrome) {\r\n        setLearnUrl(\"https://support.google.com/chrome/answer/2693767\");\r\n      } else if (DetectRTC.browser.isEdge) {\r\n        setLearnUrl(\r\n          \"https://help.doxy.me/en/articles/3867526-allow-access-to-camera-in-edge#:~:text=How%20to%20enable%20your,browser%20tab%20(CTRL%20%2B%20R).\"\r\n        );\r\n      } else if (DetectRTC.browser.isFirefox) {\r\n        setLearnUrl(\"https://support.mozilla.org/en-US/kb/camera-permissions\");\r\n      } else if (DetectRTC.browser.isOpera) {\r\n        setLearnUrl(\"https://help.opera.com/en/latest/web-preferences/#camera\");\r\n      } else if (DetectRTC.browser.isSafari) {\r\n        setLearnUrl(\r\n          \"https://help.cer.bo/support/solutions/articles/8000084621-allow-access-to-camera-in-safari-mobile-tablet-\"\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      {!assets ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <View style={styles.container}>\r\n            <Image\r\n              source={require(\"../assets/images/nocam.png\")}\r\n              style={nocam.image}\r\n            />\r\n            <Text style={[styles.bold, { marginBottom: 15, fontSize: 18 }]}>\r\n              No access to camera\r\n            </Text>\r\n            <Text\r\n              style={[styles.text, { textAlign: \"center\", marginBottom: 10 }]}\r\n            >\r\n              Please enable camera access in your web browser’s settings then\r\n              try scanning again.\r\n            </Text>\r\n            <View\r\n              style={[\r\n                styles.center,\r\n                {\r\n                  flexDirection: \"row\",\r\n                },\r\n              ]}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  Linking.openURL(learnUrl);\r\n                }}\r\n                style={[\r\n                  styles.center,\r\n                  {\r\n                    borderWidth: 1,\r\n                    borderColor: \"grey\",\r\n                    borderRadius: 5,\r\n                    paddingHorizontal: 10,\r\n                    paddingVertical: 5,\r\n                    marginRight: 10,\r\n                  },\r\n                ]}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: \"blue\",\r\n                  }}\r\n                >\r\n                  Learn more\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  navigation.dispatch(\r\n                    CommonActions.reset({\r\n                      index: 0,\r\n                      routes: [{ name: \"QR List\" }],\r\n                    })\r\n                  );\r\n                }}\r\n                style={[nocam.button, styles.shadow]}\r\n              >\r\n                <Text style={{ color: \"white\", textAlign: \"center\" }}>\r\n                  Go back\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst nocam = StyleSheet.create({\r\n  image: {\r\n    width: 40,\r\n    height: 40,\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#1971ef\",\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 5,\r\n    borderRadius: 5,\r\n  },\r\n});\r\n\r\nexport default NoCamera;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  SafeAreaView,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n} from \"react-native\";\r\nimport Modal from \"react-native-modal\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { styles } from \"../../screens/styles\";\r\n\r\nconst ModalComponent = (props) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const { show, onClose } = props;\r\n\r\n  useEffect(() => {\r\n    setShowModal(show);\r\n  }, [show]);\r\n\r\n  return (\r\n    <Modal\r\n      customBackdrop={\r\n        <SafeAreaView style={modalStyle.customBackdrop}></SafeAreaView>\r\n      }\r\n      animationIn=\"fadeInDownBig\"\r\n      isVisible={showModal}\r\n    >\r\n      <View style={styles.center}>\r\n        <View style={[modalStyle.modalInnerView, styles.center]}>\r\n          <View style={{ position: \"absolute\", top: 7, right: 7 }}>\r\n            <TouchableOpacity onPress={() => onClose()}>\r\n              <Ionicons name=\"close-outline\" size={28} color=\"black\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={[modalStyle.IconView, styles.center]}>\r\n            <View style={modalStyle.AppIcon}></View>\r\n            <View style={modalStyle.AppIcon}></View>\r\n            <View\r\n              style={[\r\n                modalStyle.AppIcon,\r\n                styles.shadow,\r\n                {\r\n                  marginRight: 4,\r\n                  width: 90,\r\n                  height: 90,\r\n                  borderRadius: 5,\r\n                },\r\n              ]}\r\n            >\r\n              <Image\r\n                source={require(\"../../assets/icon.png\")}\r\n                style={[\r\n                  {\r\n                    borderRadius: 5,\r\n                    width: 90,\r\n                    height: 90,\r\n                  },\r\n                ]}\r\n              />\r\n            </View>\r\n\r\n            <View style={modalStyle.AppIcon}></View>\r\n            <View style={modalStyle.AppIcon}></View>\r\n          </View>\r\n          <Text\r\n            style={[\r\n              styles.bold,\r\n              {\r\n                fontSize: 20,\r\n                fontFamily: \"OpenSans_700Bold\",\r\n                marginBottom: 20,\r\n              },\r\n            ]}\r\n          >\r\n            Install SafeKey Wallet\r\n          </Text>\r\n          <Text\r\n            style={[\r\n              styles.text,\r\n              {\r\n                marginHorizontal: 20,\r\n                textAlign: \"center\",\r\n                fontSize: 16,\r\n                marginBottom: 20,\r\n              },\r\n            ]}\r\n          >\r\n            Install SafeKey Wallet on your home screen for quick and easy access\r\n            when you're on the go.\r\n          </Text>\r\n          <View\r\n            style={[\r\n              styles.center,\r\n              {\r\n                backgroundColor: \"#f9f9f9\",\r\n                width: \"100%\",\r\n                paddingVertical: 15,\r\n              },\r\n            ]}\r\n          >\r\n            <Text style={[styles.center, styles.text]}>\r\n              Just tap\r\n              <Image\r\n                style={{\r\n                  width: 18,\r\n                  height: 18,\r\n                  marginHorizontal: 4,\r\n                  marginBottom: 3,\r\n                }}\r\n                source={require(\"../../assets/images/share-min.svg\")}\r\n              />\r\n              then 'Add to Home Screen'\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst modalStyle = StyleSheet.create({\r\n  customBackdrop: {\r\n    backgroundColor: \"black\",\r\n    position: \"sticky\",\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n  },\r\n  modalInnerView: {\r\n    maxWidth: 350,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 5,\r\n    overflow: \"hidden\",\r\n  },\r\n  IconView: {\r\n    overflow: \"hidden\",\r\n    flexDirection: \"row\",\r\n    marginVertical: 30,\r\n  },\r\n  AppIcon: {\r\n    width: 80,\r\n    height: 80,\r\n    backgroundColor: \"#f0f0f0\",\r\n    borderRadius: 5,\r\n    marginHorizontal: 4,\r\n    marginVertical: 8,\r\n  },\r\n});\r\n\r\nexport default ModalComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { styles } from \"../../screens/styles\";\r\nimport ModalComponent from \"../Modal/Modal\";\r\nimport * as Analytics from \"expo-firebase-analytics\";\r\n\r\nconst Version = (props) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [devicePlatform, setDevicePlatform] = useState(null);\r\n  const [showInstallBtn, setShowInstallBtn] = useState(false);\r\n\r\n  function getOS() {\r\n    var userAgent = window.navigator.userAgent,\r\n      platform = window.navigator.platform,\r\n      macosPlatforms = [\"Macintosh\", \"MacIntel\", \"MacPPC\", \"Mac68K\"],\r\n      windowsPlatforms = [\"Win32\", \"Win64\", \"Windows\", \"WinCE\"],\r\n      iosPlatforms = [\"iPhone\", \"iPad\", \"iPod\"],\r\n      os = null;\r\n\r\n    if (macosPlatforms.indexOf(platform) !== -1) {\r\n      os = \"Mac OS\";\r\n      setShowInstallBtn(false);\r\n    } else if (iosPlatforms.indexOf(platform) !== -1) {\r\n      os = \"iOS\";\r\n      setShowInstallBtn(true);\r\n    } else if (windowsPlatforms.indexOf(platform) !== -1) {\r\n      os = \"Windows\";\r\n      setShowInstallBtn(false);\r\n    } else if (/Android/.test(userAgent)) {\r\n      os = \"Android\";\r\n    } else if (!os && /Linux/.test(platform)) {\r\n      os = \"Linux\";\r\n      setShowInstallBtn(false);\r\n    }\r\n    // return os;\r\n    setDevicePlatform(os);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getOS();\r\n  }, []);\r\n\r\n  window.addEventListener(\"beforeinstallprompt\", (event) => {\r\n    event.preventDefault();\r\n    // Stash the event so it can be triggered later.\r\n    window.deferredPrompt = event;\r\n    // Update UI notify the user they can install the PWA\r\n    if (devicePlatform === \"Android\") {\r\n      setShowInstallBtn(true);\r\n    }\r\n  });\r\n\r\n  const handleInstallBtnClick = async () => {\r\n    const promptEvent = window.deferredPrompt;\r\n    if (!promptEvent) {\r\n      // The deferred prompt isn't available.\r\n      console.error(\"👎\", \"The deferred prompt is not available.\");\r\n    }\r\n    // Show the install prompt.\r\n    promptEvent.prompt();\r\n    // Log the result\r\n    const result = await promptEvent.userChoice;\r\n    console.log(\"👍\", \"User choice:\", result.outcome);\r\n\r\n    if (result.outcome === \"accepted\") {\r\n      Analytics.logEvent(\"AppInstalled\", {\r\n        purpose: \"User has installed PWA\",\r\n      });\r\n    } else if (result.outcome === \"dismissed\") {\r\n      console.log(\"User cancelled home screen install\");\r\n    }\r\n    // Reset the deferred prompt variable, since\r\n    // prompt() can only be called once.\r\n    window.deferredPrompt = null;\r\n  };\r\n\r\n  window.addEventListener(\"appinstalled\", () => {\r\n    // Hide the app-provided install promotion\r\n    setShowInstallBtn(false);\r\n    // Clear the deferredPrompt so it can be garbage collected\r\n    window.deferredPrompt = null;\r\n    // Sending analytics event to indicate successful install\r\n    console.log(\"PWA was installed\");\r\n  });\r\n\r\n  function isInstalled() {\r\n    // For iOS\r\n    if (window.navigator.standalone) return true;\r\n\r\n    // For Android\r\n    if (window.matchMedia(\"(display-mode: standalone)\").matches) return true;\r\n\r\n    // If neither is true, it's not installed\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={[\r\n          VersionStyle.container,\r\n          {\r\n            marginBottom: \"env(safe-area-inset-bottom)\",\r\n            position: \"sticky\",\r\n            bottom: 0,\r\n            filter: props.brightness,\r\n          },\r\n        ]}\r\n      >\r\n        <Text style={VersionStyle.text}>Version: 1.2.6</Text>\r\n        {showInstallBtn && !isInstalled() ? (\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              if (devicePlatform === \"iOS\") {\r\n                setModalVisible(true);\r\n              } else if (devicePlatform === \"Android\") {\r\n                handleInstallBtnClick();\r\n              } else {\r\n                console.error(\r\n                  \"Progressive web app installation is not supported on this device\"\r\n                );\r\n              }\r\n            }}\r\n            style={[\r\n              styles.center,\r\n              {\r\n                borderRadius: 50,\r\n                backgroundColor: \"#1971ef\",\r\n                shadowColor: \"#0a418f\",\r\n              },\r\n            ]}\r\n          >\r\n            <Text style={[VersionStyle.btnText]}>Install</Text>\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </View>\r\n      <ModalComponent\r\n        onClose={() => setModalVisible(false)}\r\n        show={modalVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst VersionStyle = StyleSheet.create({\r\n  container: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: 50,\r\n    backgroundColor: \"#f5f5f5\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    paddingHorizontal: 15,\r\n  },\r\n  text: {\r\n    color: \"#0000008c\",\r\n  },\r\n  btnText: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 5,\r\n    fontSize: 14,\r\n    color: \"#fff\",\r\n  },\r\n});\r\n\r\nexport default Version;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { View, Image } from \"react-native\";\r\n//  Import react-navigation\r\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n// Import Firebase\r\nimport * as Analytics from \"expo-firebase-analytics\";\r\n// Importing the screens\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport SelectDocumentScreen from \"./screens/SelectDocumentScreen\";\r\nimport QrScanScreen from \"./screens/QrScanScreen\";\r\nimport QrListScreen from \"./screens/QrListScreen\";\r\nimport PassInfoScreen from \"./screens/NoticeSafeKeyScreen\";\r\nimport VaxInfoScreen from \"./screens/NoticeVaccinationScreen\";\r\nimport ContactInfoScreen from \"./screens/NoticeContactTracingScreen\";\r\nimport ShowQrScreenPass from \"./screens/ShowSafeKeyQrScreen\";\r\nimport ShowQrScreenVax from \"./screens/ShowVaccinationQrScreen\";\r\nimport ShowQrScreenContact from \"./screens/ShowContactKeyQRScreen\";\r\nimport NotFound from \"./screens/NotFoundScreen\";\r\nimport NoCamera from \"./screens/NoCameraScreen\";\r\nimport Loading from \"./screens/Loading\";\r\n// Importing async storage\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n// Importing fonts\r\nimport {\r\n  useFonts,\r\n  OpenSans_400Regular,\r\n  OpenSans_600SemiBold,\r\n  OpenSans_700Bold,\r\n  OpenSans_800ExtraBold,\r\n} from \"@expo-google-fonts/open-sans\";\r\n// Importing Toast\r\nimport { ToastProvider } from \"react-native-toast-notifications\";\r\n// Importing Modal\r\nconst Stack = createStackNavigator();\r\nimport Version from \"./components/Version/Version\";\r\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\r\n\r\nexport default function App() {\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n  const [hasQR, setHasQR] = useState(false);\r\n  const [screenName, setScreenName] = useState(undefined);\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    OpenSans_400Regular,\r\n    OpenSans_600SemiBold,\r\n    OpenSans_700Bold,\r\n    OpenSans_800ExtraBold,\r\n  });\r\n\r\n  const config = {\r\n    screens: {\r\n      Home: \"\",\r\n      \"Select Document\": \"select-document\",\r\n      \"Scan QR\": \"qr-scanner\",\r\n      \"QR List\": \"wallet\",\r\n      \"SafeKey Notice\": \"safekey-notice\",\r\n      \"Vaccination Notice\": \"certificate-notice\",\r\n      \"Contact Tracing Notice\": \"contact-tracing-notice\",\r\n      \"SafeKey QR\": \"safekey\",\r\n      \"Vaccination Certificate QR\": \"vaccination-certificate\",\r\n      \"Contact Tracing Key QR\": \"contact-tracing-key\",\r\n      NoCamera: \"NoCamera\",\r\n      NotFound: \"*\",\r\n    },\r\n  };\r\n\r\n  const linking = {\r\n    prefixes: [],\r\n    config,\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function read() {\r\n      try {\r\n        const passkey = await AsyncStorage.getItem(\"BM.KEY\");\r\n        const vax = await AsyncStorage.getItem(\"BM.VAX\");\r\n\r\n        if (passkey !== null || vax !== null) {\r\n          setHasQR(true);\r\n        }\r\n      } catch (e) {\r\n        alert(\"Failed to fetch the data from storage: \" + e);\r\n      }\r\n      setHasLoaded(true);\r\n    }\r\n    read();\r\n  }, []);\r\n\r\n  const navigationRef = useRef();\r\n  const routeNameRef = useRef();\r\n\r\n  return (\r\n    <ToastProvider offset={75} swipeEnabled={false}>\r\n      {fontsLoaded && hasLoaded ? (\r\n        <NavigationContainer\r\n          ref={navigationRef}\r\n          onReady={() => {\r\n            routeNameRef.current = navigationRef.current.getCurrentRoute().name;\r\n            setScreenName(navigationRef.current.getCurrentRoute().name);\r\n          }}\r\n          onStateChange={async () => {\r\n            const previousRouteName = routeNameRef.current;\r\n            const currentRouteName =\r\n              navigationRef.current.getCurrentRoute().name;\r\n            if (previousRouteName !== currentRouteName) {\r\n              // The line below uses the expo-firebase-analytics tracker\r\n              // https://docs.expo.io/versions/latest/sdk/firebase-analytics/\r\n              // Change this line to use another Mobile analytics SDK\r\n              await Analytics.setCurrentScreen(currentRouteName);\r\n              if (screenName === currentRouteName) {\r\n                return;\r\n              } else {\r\n                setScreenName(currentRouteName);\r\n              }\r\n            }\r\n\r\n            // Save the current route name for later comparison\r\n            routeNameRef.current = currentRouteName;\r\n          }}\r\n          linking={linking}\r\n          fallback={<Loading />}\r\n        >\r\n          <Stack.Navigator\r\n            screenOptions={{\r\n              headerTitleStyle: {\r\n                alignSelf: \"center\",\r\n                fontFamily: \"OpenSans_600SemiBold\",\r\n              },\r\n              headerRight: () => (\r\n                <Image\r\n                  resizeMethod=\"auto\"\r\n                  style={{ width: 23, height: 35, margin: 20 }}\r\n                  source={require(\"./assets/images/bm-logo.svg\")}\r\n                />\r\n              ),\r\n            }}\r\n            initialRouteName={hasQR ? \"QR List\" : \"Home\"}\r\n          >\r\n            <Stack.Screen\r\n              name=\"Home\"\r\n              component={HomeScreen}\r\n              options={{\r\n                headerTitleStyle: {\r\n                  alignSelf: \"flex-start\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n                title: \"SafeKey Wallet\",\r\n                headerTitle: \" SafeKey Wallet\",\r\n                headerRight: () => (\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row-reverse\",\r\n                      paddingRight: 20,\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      resizeMethod=\"auto\"\r\n                      style={{ width: 23, height: 35 }}\r\n                      source={require(\"./assets/images/bm-logo.svg\")}\r\n                    />\r\n                  </View>\r\n                ),\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Select Document\"\r\n              component={SelectDocumentScreen}\r\n              options={{\r\n                title: \"Select Document\",\r\n                headerTitleStyle: {\r\n                  alignSelf: \"flex-start\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n                headerTitle: \" Select your SafeKey Document\",\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"QR List\"\r\n              component={QrListScreen}\r\n              options={{\r\n                title: \"SafeKey Wallet\",\r\n                headerTitleStyle: {\r\n                  alignSelf: \"flex-start\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n                headerTitle: \" SafeKey Wallet\",\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Scan QR\"\r\n              options={{\r\n                headerTitleAlign: \"center\",\r\n                headerTitle: \"Scan your SafeKey\",\r\n              }}\r\n              component={QrScanScreen}\r\n            />\r\n            <Stack.Screen\r\n              name=\"SafeKey Notice\"\r\n              component={PassInfoScreen}\r\n              options={{\r\n                headerTitleAlign: \"center\",\r\n                headerTitleStyle: {\r\n                  alignSelf: \"center\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n                headerTitle: \"Notice\",\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Vaccination Notice\"\r\n              component={VaxInfoScreen}\r\n              options={{\r\n                headerTitleAlign: \"center\",\r\n                headerTitle: \"Notice\",\r\n                headerTitleStyle: {\r\n                  alignSelf: \"center\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Contact Tracing Notice\"\r\n              component={ContactInfoScreen}\r\n              options={{\r\n                headerTitleAlign: \"center\",\r\n                headerTitle: \"Notice\",\r\n                headerTitleStyle: {\r\n                  alignSelf: \"center\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              options={{ headerTitle: \"Show QR\", headerTitleAlign: \"center\" }}\r\n              name=\"SafeKey QR\"\r\n              component={ShowQrScreenPass}\r\n            />\r\n            <Stack.Screen\r\n              options={{ headerTitle: \"Show QR\", headerTitleAlign: \"center\" }}\r\n              name=\"Vaccination Certificate QR\"\r\n              component={ShowQrScreenVax}\r\n            />\r\n            <Stack.Screen\r\n              options={{ headerTitle: \"Show QR\", headerTitleAlign: \"center\" }}\r\n              name=\"Contact Tracing Key QR\"\r\n              component={ShowQrScreenContact}\r\n            />\r\n            <Stack.Screen\r\n              options={{\r\n                headerTitle: \"404: Not Found\",\r\n                headerTitleAlign: \"center\",\r\n                title: \"Page Not Found\",\r\n              }}\r\n              name=\"NotFound\"\r\n              component={NotFound}\r\n            />\r\n            <Stack.Screen\r\n              options={{\r\n                headerTitleAlign: \"center\",\r\n                headerTitle: \"No Camera Permission\",\r\n                title: \"No Camera Permission\",\r\n              }}\r\n              name=\"NoCamera\"\r\n              component={NoCamera}\r\n            />\r\n          </Stack.Navigator>\r\n          {screenName === \"Scan QR\" ? (\r\n            <Version brightness={\"brightness(0)\"} />\r\n          ) : (\r\n            <Version />\r\n          )}\r\n        </NavigationContainer>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </ToastProvider>\r\n  );\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/icon.1092b622.png\";","module.exports = __webpack_public_path__ + \"static/media/bm-logo.57a3e983.svg\";"],"sourceRoot":""}