{"version":3,"sources":["assets/images/bm-logo.svg","assets/images/qr-background.svg","assets/images/share-min.svg","screens/HomeScreen.js","src/serviceWorkerRegistration.js","App.js","screens/styles.js","assets/icon.png","screens/Loading.js"],"names":["module","exports","Version","loadable","HomeScreen","navigation","useState","passExists","setPassExists","vaxExists","setVaxExists","useAssets","require","assets","useEffect","a","async","AsyncStorage","getItem","value","getPasskey","e","alert","getVax","dispatch","StackActions","replace","View","style","styles","container","paddingBottom","Image","resizeMethod","height","width","marginTop","source","Text","bold","marginBottom","fontSize","text","textAlign","TouchableOpacity","onPress","navigate","btn","shadow","backgroundColor","borderWidth","btnText","color","btnLine","Loading","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","SelectDocumentScreen","QrScanScreen","QrListScreen","PassInfoScreen","VaxInfoScreen","ShowQrScreenPass","ShowQrScreenVax","NotFound","NoCamera","Stack","createStackNavigator","App","hasLoaded","setHasLoaded","hasQR","setHasQR","isModalVisible","setModalVisible","undefined","devicePlatform","setDevicePlatform","showInstallBtn","setShowInstallBtn","useFonts","OpenSans_400Regular","OpenSans_600SemiBold","OpenSans_700Bold","OpenSans_800ExtraBold","fontsLoaded","linking","prefixes","screens","Home","passkey","vax","read","navigationRef","useRef","routeNameRef","userAgent","platform","os","indexOf","test","getOS","addEventListener","event","deferredPrompt","offsetBottom","NavigationContainer","ref","onReady","current","getCurrentRoute","name","onStateChange","previousRouteName","currentRouteName","Analytics","fallback","Navigator","screenOptions","headerTitleStyle","alignSelf","fontFamily","headerRight","margin","initialRouteName","Screen","component","options","TransitionPresets","ModalSlideFromBottomIOS","title","headerTitle","cardStyleInterpolator","Platform","OS","cardStyle","opacity","progress","flexDirection","paddingRight","alignItems","promptEvent","prompt","userChoice","result","outcome","handleInstallBtnClick","center","marginRight","paddingHorizontal","borderRadius","animationTypeForReplace","headerTitleAlign","animationIn","isVisible","modalStyle","modalInnerView","position","top","right","Ionicons","size","IconView","AppIcon","marginHorizontal","paddingVertical","StyleSheet","create","maxWidth","overflow","marginVertical","URL","process","href","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","flex","justifyContent","containerTop","paddingTop","flexWrap","borderColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","li","lineHeight","marginLeft","noticeHeader","QrHeader","fontWeight","display","bmQrLogo"],"mappings":"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","file":"static/js/app.17d64719.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bm-logo.57a3e983.svg\";","module.exports = __webpack_public_path__ + \"static/media/qr-background.83209ff7.svg\";","module.exports = __webpack_public_path__ + \"static/media/share-min.31430806.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, TouchableOpacity, Image } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport Loading from \"./Loading\";\r\nimport { styles } from \"./styles\";\r\nimport { useAssets } from \"expo-asset\";\r\nimport loadable from \"@loadable/component\";\r\n\r\nconst Version = loadable(() => import(\"../components/Version/Version\"));\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [passExists, setPassExists] = useState(null);\r\n  const [vaxExists, setVaxExists] = useState(null);\r\n\r\n  const [assets] = useAssets([\r\n    require(\"../assets/images/qr-background.svg\"),\r\n    require(\"../assets/images/bm-logo.svg\"),\r\n    require(\"../assets/images/share-min.svg\"),\r\n  ]);\r\n  useEffect(() => {\r\n    try {\r\n      async function getPasskey() {\r\n        const value = await AsyncStorage.getItem(\"BM.KEY\");\r\n        if (value !== null) {\r\n          setPassExists(true);\r\n        } else {\r\n          setPassExists(false);\r\n        }\r\n      }\r\n      getPasskey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [passExists]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getVax() {\r\n        const value = await AsyncStorage.getItem(\"BM.VAX\");\r\n        if (value !== null) {\r\n          setVaxExists(true);\r\n        } else {\r\n          setVaxExists(false);\r\n        }\r\n      }\r\n      getVax();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  useEffect(() => {\r\n    if (vaxExists === true || passExists === true) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [vaxExists, passExists]);\r\n\r\n  return (\r\n    <>\r\n      {!assets ? (\r\n        <Loading />\r\n      ) : (\r\n        <View\r\n          style={[\r\n            styles.container,\r\n            {\r\n              paddingBottom: 50,\r\n            },\r\n          ]}\r\n        >\r\n          <View>\r\n            <Image\r\n              resizeMethod=\"auto\"\r\n              style={{ height: 150, width: 170, marginTop: 25 }}\r\n              source={require(\"../assets/images/qr-background.svg\")}\r\n            />\r\n          </View>\r\n          <Text style={[styles.bold, { marginBottom: 2, fontSize: 18 }]}>\r\n            No SafeKey's found\r\n          </Text>\r\n          <Text\r\n            style={[\r\n              styles.text,\r\n              { marginTop: 0, marginBottom: 15, textAlign: \"center\" },\r\n            ]}\r\n          >\r\n            Press Scan or Select to add one.\r\n          </Text>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              navigation.navigate(\"Scan QR\");\r\n            }}\r\n            style={[\r\n              styles.btn,\r\n              styles.shadow,\r\n              { backgroundColor: \"#1971ef\", borderWidth: 0 },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.btnText,\r\n                {\r\n                  color: \"white\",\r\n                },\r\n              ]}\r\n            >\r\n              Scan Document\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.btn,\r\n              styles.shadow,\r\n              styles.btnLine,\r\n              {\r\n                backgroundColor: \"#fff\",\r\n                marginTop: 16,\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(\"Select Document\");\r\n            }}\r\n          >\r\n            <Text style={[styles.btnText, { color: \"#1971ef\" }]}>\r\n              Select Document\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n      <Version />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  Platform,\r\n  TouchableOpacity,\r\n  Text,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport loadable from \"@loadable/component\";\r\n//  Import react-navigation\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport {\r\n  createStackNavigator,\r\n  TransitionPresets,\r\n} from \"@react-navigation/stack\";\r\n// Import Firebase\r\nimport * as Analytics from \"expo-firebase-analytics\";\r\n// Importing the screens\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nconst SelectDocumentScreen = loadable(() =>\r\n  import(\"./screens/SelectDocumentScreen\")\r\n);\r\nconst QrScanScreen = loadable(() => import(\"./screens/QrScanScreen\"));\r\nconst QrListScreen = loadable(() => import(\"./screens/QrListScreen\"));\r\nconst PassInfoScreen = loadable(() => import(\"./screens/NoticeSafeKeyScreen\"));\r\nconst VaxInfoScreen = loadable(() =>\r\n  import(\"./screens/NoticeVaccinationScreen\")\r\n);\r\nconst ShowQrScreenPass = loadable(() =>\r\n  import(\"./screens/ShowSafeKeyQrScreen\")\r\n);\r\nconst ShowQrScreenVax = loadable(() =>\r\n  import(\"./screens/ShowVaccinationQrScreen\")\r\n);\r\nconst NotFound = loadable(() => import(\"./screens/NotFoundScreen\"));\r\nconst NoCamera = loadable(() => import(\"./screens/NoCameraScreen\"));\r\nimport Loading from \"./screens/Loading\";\r\n// Importing async storage\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n// Importing fonts\r\nimport {\r\n  useFonts,\r\n  OpenSans_400Regular,\r\n  OpenSans_600SemiBold,\r\n  OpenSans_700Bold,\r\n  OpenSans_800ExtraBold,\r\n} from \"@expo-google-fonts/open-sans\";\r\n// Importing Toast\r\nimport { ToastProvider } from \"react-native-toast-notifications\";\r\n// Importing Modal\r\nimport Modal from \"react-native-modal\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nconst Stack = createStackNavigator();\r\n\r\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\r\nimport { styles } from \"./screens/styles\";\r\n\r\nexport default function App() {\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n  const [hasQR, setHasQR] = useState(false);\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [devicePlatform, setDevicePlatform] = useState(undefined);\r\n  const [showInstallBtn, setShowInstallBtn] = useState(false);\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    OpenSans_400Regular,\r\n    OpenSans_600SemiBold,\r\n    OpenSans_700Bold,\r\n    OpenSans_800ExtraBold,\r\n  });\r\n\r\n  const config = {\r\n    screens: {\r\n      Home: \"\",\r\n      \"Select Document\": \"select-document\",\r\n      \"Scan QR\": \"qr-scanner\",\r\n      \"QR List\": \"wallet\",\r\n      \"SafeKey Notice\": \"safekey-notice\",\r\n      \"Vaccination Notice\": \"certificate-notice\",\r\n      \"SafeKey QR\": \"safekey\",\r\n      \"Vaccination Certificate QR\": \"vaccination-certificate\",\r\n      NoCamera: \"NoCamera\",\r\n      NotFound: \"*\",\r\n    },\r\n  };\r\n\r\n  const linking = {\r\n    prefixes: [],\r\n    config,\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function read() {\r\n      try {\r\n        const passkey = await AsyncStorage.getItem(\"BM.KEY\");\r\n        const vax = await AsyncStorage.getItem(\"BM.VAX\");\r\n\r\n        if (passkey !== null || vax !== null) {\r\n          setHasQR(true);\r\n        }\r\n      } catch (e) {\r\n        alert(\"Failed to fetch the data from storage: \" + e);\r\n      }\r\n      setHasLoaded(true);\r\n    }\r\n    read();\r\n  }, []);\r\n\r\n  const navigationRef = useRef();\r\n  const routeNameRef = useRef();\r\n\r\n  function getOS() {\r\n    var userAgent = window.navigator.userAgent,\r\n      platform = window.navigator.platform,\r\n      macosPlatforms = [\"Macintosh\", \"MacIntel\", \"MacPPC\", \"Mac68K\"],\r\n      windowsPlatforms = [\"Win32\", \"Win64\", \"Windows\", \"WinCE\"],\r\n      iosPlatforms = [\"iPhone\", \"iPad\", \"iPod\"],\r\n      os = null;\r\n\r\n    if (macosPlatforms.indexOf(platform) !== -1) {\r\n      os = \"Mac OS\";\r\n    } else if (iosPlatforms.indexOf(platform) !== -1) {\r\n      os = \"iOS\";\r\n    } else if (windowsPlatforms.indexOf(platform) !== -1) {\r\n      os = \"Windows\";\r\n    } else if (/Android/.test(userAgent)) {\r\n      os = \"Android\";\r\n    } else if (!os && /Linux/.test(platform)) {\r\n      os = \"Linux\";\r\n    }\r\n\r\n    // return os;\r\n    setDevicePlatform(os);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getOS();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (devicePlatform === \"iOS\") {\r\n      setShowInstallBtn(true);\r\n    }\r\n  });\r\n\r\n  window.addEventListener(\"beforeinstallprompt\", (event) => {\r\n    console.log(\"👍\", \"beforeinstallprompt\", event);\r\n    // Stash the event so it can be triggered later.\r\n    window.deferredPrompt = event;\r\n    // Update UI notify the user they can install the PWA\r\n    setShowInstallBtn(true);\r\n    // Optionally, send analytics event that PWA install promo was shown.\r\n    console.log(`'beforeinstallprompt' event was fired.`);\r\n  });\r\n\r\n  const handleInstallBtnClick = async () => {\r\n    console.log(\"👍\", \"butInstall-clicked\");\r\n    const promptEvent = window.deferredPrompt;\r\n    if (!promptEvent) {\r\n      // The deferred prompt isn't available.\r\n      console.error(\"👎\", \"The deferred prompt is not available.\");\r\n      return;\r\n    }\r\n    // Show the install prompt.\r\n    promptEvent.prompt();\r\n    // Log the result\r\n    const result = await promptEvent.userChoice;\r\n    console.log(\"👍\", \"userChoice\", result);\r\n    // Reset the deferred prompt variable, since\r\n    // prompt() can only be called once.\r\n    if (result.outcome === \"accepted\") {\r\n      setShowInstallBtn(false);\r\n    }\r\n    window.deferredPrompt = null;\r\n  };\r\n\r\n  return (\r\n    <ToastProvider offsetBottom={70}>\r\n      {fontsLoaded && hasLoaded ? (\r\n        <NavigationContainer\r\n          ref={navigationRef}\r\n          onReady={() =>\r\n            (routeNameRef.current =\r\n              navigationRef.current.getCurrentRoute().name)\r\n          }\r\n          onStateChange={async () => {\r\n            const previousRouteName = routeNameRef.current;\r\n            const currentRouteName =\r\n              navigationRef.current.getCurrentRoute().name;\r\n            // console.log(previousRouteName, currentRouteName);\r\n            if (previousRouteName !== currentRouteName) {\r\n              // The line below uses the expo-firebase-analytics tracker\r\n              // https://docs.expo.io/versions/latest/sdk/firebase-analytics/\r\n              // Change this line to use another Mobile analytics SDK\r\n              await Analytics.setCurrentScreen(currentRouteName);\r\n            }\r\n\r\n            // Save the current route name for later comparison\r\n            routeNameRef.current = currentRouteName;\r\n          }}\r\n          linking={linking}\r\n          fallback={<Loading />}\r\n        >\r\n          <Stack.Navigator\r\n            screenOptions={{\r\n              headerTitleStyle: {\r\n                alignSelf: \"center\",\r\n                fontFamily: \"OpenSans_600SemiBold\",\r\n              },\r\n              headerRight: () => (\r\n                <Image\r\n                  resizeMethod=\"auto\"\r\n                  style={{ width: 23, height: 35, margin: 20 }}\r\n                  source={require(\"./assets/images/bm-logo.svg\")}\r\n                />\r\n              ),\r\n            }}\r\n            initialRouteName={hasQR ? \"QR List\" : \"Home\"}\r\n          >\r\n            <Stack.Screen\r\n              name=\"Home\"\r\n              component={HomeScreen}\r\n              options={{\r\n                ...TransitionPresets.ModalSlideFromBottomIOS,\r\n                headerTitleStyle: {\r\n                  alignSelf: \"flex-start\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n                title: \"SafeKey Wallet\",\r\n                headerTitle: \" SafeKey Wallet\",\r\n                cardStyleInterpolator:\r\n                  Platform.OS === \"ios\"\r\n                    ? ({ current }) => ({\r\n                        cardStyle: { opacity: current.progress },\r\n                      })\r\n                    : undefined,\r\n                headerRight: () => (\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row-reverse\",\r\n                      paddingRight: 20,\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      resizeMethod=\"auto\"\r\n                      style={{ width: 23, height: 35 }}\r\n                      source={require(\"./assets/images/bm-logo.svg\")}\r\n                    />\r\n                    {showInstallBtn ? (\r\n                      <TouchableOpacity\r\n                        onPress={() => {\r\n                          if (devicePlatform === \"iOS\") {\r\n                            setModalVisible(true);\r\n                          } else if (devicePlatform === \"Android\") {\r\n                            handleInstallBtnClick();\r\n                          } else {\r\n                            alert(\"other\");\r\n                          }\r\n                        }}\r\n                        style={[\r\n                          styles.center,\r\n                          {\r\n                            backgroundColor: \"#1971ef\",\r\n                            marginRight: 20,\r\n                            paddingHorizontal: 16,\r\n                            height: 28,\r\n                            borderRadius: 50,\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Text style={[styles.text, { color: \"#fff\" }]}>\r\n                          Install\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </View>\r\n                ),\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Select Document\"\r\n              component={SelectDocumentScreen}\r\n              options={{\r\n                title: \"Select Document\",\r\n                animationTypeForReplace: \"pop\",\r\n                headerTitleStyle: {\r\n                  alignSelf: \"flex-start\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n                headerTitle: \" Select your SafeKey Document\",\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"QR List\"\r\n              component={QrListScreen}\r\n              options={{\r\n                title: \"SafeKey Wallet\",\r\n                animationTypeForReplace: \"pop\",\r\n                headerTitleStyle: {\r\n                  alignSelf: \"flex-start\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n                headerTitle: \" SafeKey Wallet\",\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Scan QR\"\r\n              options={{ headerTitle: \"Scan your SafeKey\" }}\r\n              component={QrScanScreen}\r\n            />\r\n            <Stack.Screen\r\n              name=\"SafeKey Notice\"\r\n              component={PassInfoScreen}\r\n              options={{\r\n                headerTitleStyle: {\r\n                  alignSelf: \"center\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n                headerTitle: \"Notice\",\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Vaccination Notice\"\r\n              component={VaxInfoScreen}\r\n              options={{\r\n                headerTitle: \"Notice\",\r\n                headerTitleStyle: {\r\n                  alignSelf: \"center\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              options={{ headerTitle: \"Show QR\" }}\r\n              name=\"SafeKey QR\"\r\n              component={ShowQrScreenPass}\r\n            />\r\n            <Stack.Screen\r\n              options={{ headerTitle: \"Show QR\" }}\r\n              name=\"Vaccination Certificate QR\"\r\n              component={ShowQrScreenVax}\r\n            />\r\n            <Stack.Screen\r\n              options={{\r\n                headerTitle: \"404: Not Found\",\r\n                title: \"Page Not Found\",\r\n              }}\r\n              name=\"NotFound\"\r\n              component={NotFound}\r\n            />\r\n            <Stack.Screen\r\n              options={{\r\n                headerTitleAlign: \"center\",\r\n                headerTitle: \"No Camera Permission\",\r\n                title: \"No Camera Permission\",\r\n              }}\r\n              name=\"NoCamera\"\r\n              component={NoCamera}\r\n            />\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n      <Modal animationIn=\"fadeInDownBig\" isVisible={isModalVisible}>\r\n        <View style={styles.center}>\r\n          <View style={[modalStyle.modalInnerView, styles.center]}>\r\n            <View style={{ position: \"absolute\", top: 7, right: 7 }}>\r\n              <TouchableOpacity onPress={() => setModalVisible(false)}>\r\n                <Ionicons name=\"close-outline\" size={28} color=\"black\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={[modalStyle.IconView, styles.center]}>\r\n              <View style={modalStyle.AppIcon}></View>\r\n              <View style={modalStyle.AppIcon}></View>\r\n              <View\r\n                style={[\r\n                  modalStyle.AppIcon,\r\n                  styles.shadow,\r\n                  {\r\n                    marginRight: 4,\r\n                    width: 90,\r\n                    height: 90,\r\n                    borderRadius: 5,\r\n                  },\r\n                ]}\r\n              >\r\n                <Image\r\n                  source={require(\"./assets/icon.png\")}\r\n                  style={[\r\n                    {\r\n                      borderRadius: 5,\r\n                      width: 90,\r\n                      height: 90,\r\n                    },\r\n                  ]}\r\n                />\r\n              </View>\r\n\r\n              <View style={modalStyle.AppIcon}></View>\r\n              <View style={modalStyle.AppIcon}></View>\r\n            </View>\r\n            <Text\r\n              style={[\r\n                styles.bold,\r\n                {\r\n                  fontSize: 20,\r\n                  fontFamily: \"OpenSans_700Bold\",\r\n                  marginBottom: 20,\r\n                },\r\n              ]}\r\n            >\r\n              Install SafeKey Wallet\r\n            </Text>\r\n            <Text\r\n              style={[\r\n                styles.text,\r\n                {\r\n                  marginHorizontal: 20,\r\n                  textAlign: \"center\",\r\n                  fontSize: 16,\r\n                  marginBottom: 20,\r\n                },\r\n              ]}\r\n            >\r\n              Install this web app on your home screen for quick and easy access\r\n              when you're on the go.\r\n            </Text>\r\n            <View\r\n              style={[\r\n                styles.center,\r\n                {\r\n                  backgroundColor: \"#f9f9f9\",\r\n                  width: \"100%\",\r\n                  paddingVertical: 15,\r\n                },\r\n              ]}\r\n            >\r\n              <Text style={[styles.center, styles.text]}>\r\n                Just tap\r\n                <Image\r\n                  style={{\r\n                    width: 18,\r\n                    height: 18,\r\n                    marginHorizontal: 4,\r\n                    marginBottom: 3,\r\n                  }}\r\n                  source={require(\"./assets/images/share-min.svg\")}\r\n                />\r\n                then 'Add to Home Screen'\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </ToastProvider>\r\n  );\r\n}\r\nconst modalStyle = StyleSheet.create({\r\n  modalInnerView: {\r\n    maxWidth: 350,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 5,\r\n    overflow: \"hidden\",\r\n  },\r\n  IconView: {\r\n    overflow: \"hidden\",\r\n    flexDirection: \"row\",\r\n    marginVertical: 30,\r\n  },\r\n  AppIcon: {\r\n    width: 80,\r\n    height: 80,\r\n    backgroundColor: \"#f0f0f0\",\r\n    borderRadius: 5,\r\n    marginHorizontal: 4,\r\n    marginVertical: 8,\r\n  },\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 20,\r\n    marginBottom: 50,\r\n  },\r\n  containerTop: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    paddingHorizontal: 20,\r\n    paddingTop: 20,\r\n    flexWrap: \"wrap\",\r\n    width: \"100%\",\r\n    marginBottom: 120,\r\n  },\r\n  btn: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    borderRadius: 10,\r\n    paddingVertical: 11,\r\n  },\r\n  btnLine: {\r\n    borderWidth: 2.5,\r\n    borderColor: \"#1971ef\",\r\n  },\r\n  btnText: {\r\n    textAlign: \"center\",\r\n    fontSize: 18,\r\n  },\r\n  bold: {\r\n    textAlign: \"center\",\r\n    color: \"#333\",\r\n    fontFamily: \"OpenSans_600SemiBold\",\r\n  },\r\n  shadow: {\r\n    shadowColor: \"#470000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    elevation: 2,\r\n  },\r\n  text: {\r\n    color: \"#333\",\r\n    fontFamily: \"OpenSans_400Regular\",\r\n    fontSize: 14,\r\n  },\r\n  li: {\r\n    alignSelf: \"flex-start\",\r\n    color: \"black\",\r\n    fontFamily: \"OpenSans_400Regular\",\r\n    lineHeight: 30,\r\n    marginBottom: 30,\r\n    fontSize: 18,\r\n    textAlign: \"left\",\r\n    marginLeft: 0,\r\n    color: \"#333333\",\r\n  },\r\n  noticeHeader: {\r\n    fontFamily: \"OpenSans_600SemiBold\",\r\n    fontSize: 19,\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n    alignSelf: \"flex-start\",\r\n    color: \"#333333\",\r\n  },\r\n  QrHeader: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 30,\r\n    marginTop: 25,\r\n    color: \"#000\",\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  bmQrLogo: {\r\n    width: 55,\r\n    height: 80,\r\n    position: \"absolute\",\r\n  },\r\n});\r\n\r\nexport { styles };\r\n","module.exports = __webpack_public_path__ + \"static/media/icon.1092b622.png\";","import React from \"react\";\r\nimport { View, ActivityIndicator } from \"react-native\";\r\nimport { styles } from \"./styles\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <View style={[styles.container, { marginBottom: 0, paddingHorizontal: 0 }]}>\r\n      <ActivityIndicator color=\"#000f0f\" />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n"],"sourceRoot":""}