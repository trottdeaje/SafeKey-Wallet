{"version":3,"sources":["screens/NoticeVaccinationScreen.js"],"names":["Version","loadable","VaxInfo","navigation","useState","vaxExists","setVaxExists","useEffect","a","async","AsyncStorage","getItem","value","getVax","e","alert","dispatch","StackActions","replace","style","styles","container","noticeHeader","li","onPress","navigate","btn","shadow","backgroundColor","maxWidth","marginBottom","btnText","color"],"mappings":"yMAMMA,EAAUC,aAAS,kBAAM,8DA0DhBC,UAxDC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACjB,EAAkCC,mBAAS,MAA3C,WAAOC,EAAP,KAAkBC,EAAlB,KAwBA,OAtBAC,qBAAU,WACR,KACE,mBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACsBE,IAAaC,QAAQ,WAD3C,OACQC,EADR,OAGIN,EADY,OAAVM,GAFN,4DAQAC,GACA,MAAOC,GACPC,MAAMD,MAEP,CAACT,IAEJE,qBAAU,YACU,IAAdF,GACFF,EAAWa,SAASC,eAAaC,QAAQ,cAE1C,CAACb,IAGF,oCACE,kBAAC,IAAD,CAAMc,MAAOC,IAAOC,WAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMF,MAAOC,IAAOE,cAApB,8GAIA,kBAAC,IAAD,CAAMH,MAAOC,IAAOG,IAApB,eACe,KADf,mBACqC,KADrC,YACoD,KADpD,kBAGG,KAHH,oBAIoB,KAJpB,2BAOF,kBAAC,IAAD,CACEC,QAAS,kBAAMrB,EAAWsB,SAAS,+BACnCN,MAAO,CACLC,IAAOM,IACPN,IAAOO,OACP,CAAEC,gBAAiB,UAAWC,SAAU,IAAKC,aAAc,MAG7D,kBAAC,IAAD,CAAMX,MAAO,CAACC,IAAOW,QAAS,CAAEC,MAAO,UAAvC,cAGJ,kBAAChC,EAAD","file":"static/js/21.8bbf0911.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport loadable from \"@loadable/component\";\r\nimport { styles } from \"./styles\";\r\nconst Version = loadable(() => import(\"../components/Version/Version\"));\r\n\r\nconst VaxInfo = ({ navigation }) => {\r\n  const [vaxExists, setVaxExists] = useState(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getVax() {\r\n        const value = await AsyncStorage.getItem(\"BM.VAX\");\r\n        if (value !== null) {\r\n          setVaxExists(true);\r\n        } else {\r\n          setVaxExists(false);\r\n        }\r\n      }\r\n      getVax();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  useEffect(() => {\r\n    if (vaxExists === false) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <View>\r\n          <Text style={styles.noticeHeader}>\r\n            By allowing your Vaccination Certificate to be scanned you're\r\n            agreeing to share the following information:\r\n          </Text>\r\n          <Text style={styles.li}>\r\n            1. Full Name{\"\\n\"}2. Date of Birth{\"\\n\"}3. Expiry{\"\\n\"}4. Vaccine\r\n            Type\r\n            {\"\\n\"}\r\n            5. Vaccine Dosage{\"\\n\"}6. Date of Vaccination\r\n          </Text>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate(\"Vaccination Certificate QR\")}\r\n          style={[\r\n            styles.btn,\r\n            styles.shadow,\r\n            { backgroundColor: \"#1971ef\", maxWidth: 350, marginBottom: 25 },\r\n          ]}\r\n        >\r\n          <Text style={[styles.btnText, { color: \"#fff\" }]}>Continue</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Version />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VaxInfo;\r\n"],"sourceRoot":""}