{"version":3,"sources":["assets/images/bm-logo.svg","assets/images/file-text.png","assets/images/share-min.svg","assets/images/qr-background.svg","assets/images/camera.png","assets/images/nocam.png","screens/styles.js","screens/Loading.js","components/Modal/Modal.js","components/Version/Version.js","screens/HomeScreen.js","screens/SelectDocumentScreen.js","screens/QrScanScreen.js","components/QrTile/QrTile.js","components/QrTile/script.js","screens/QrListScreen.js","screens/NoticeSafeKeyScreen.js","screens/NoticeVaccinationScreen.js","screens/ShowSafeKeyQrScreen.js","screens/ShowVaccinationQrScreen.js","screens/NotFoundScreen.js","screens/NoCameraScreen.js","src/serviceWorkerRegistration.js","App.js","assets/icon.png"],"names":["module","exports","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","paddingHorizontal","paddingBottom","containerTop","flexDirection","paddingTop","flexWrap","width","marginBottom","btn","maxWidth","borderRadius","paddingVertical","btnLine","borderWidth","borderColor","btnText","textAlign","fontSize","bold","color","fontFamily","shadow","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","text","li","alignSelf","lineHeight","marginLeft","noticeHeader","marginTop","QrHeader","fontWeight","center","display","bmQrLogo","position","Loading","View","style","ActivityIndicator","modalStyle","customBackdrop","modalInnerView","overflow","IconView","marginVertical","AppIcon","marginHorizontal","ModalComponent","props","useState","showModal","setShowModal","show","onClose","useEffect","SafeAreaView","animationIn","isVisible","top","right","TouchableOpacity","onPress","Ionicons","name","size","marginRight","Image","source","require","Text","VersionStyle","bottom","left","Version","modalVisible","setModalVisible","devicePlatform","setDevicePlatform","showInstallBtn","setShowInstallBtn","userAgent","window","navigator","platform","os","indexOf","test","getOS","addEventListener","event","deferredPrompt","Analytics","purpose","console","log","standalone","matchMedia","matches","a","async","promptEvent","error","prompt","userChoice","handleInstallBtnClick","Modal","HomeScreen","navigation","passExists","setPassExists","vaxExists","setVaxExists","useAssets","assets","AsyncStorage","getItem","value","getPasskey","e","alert","getVax","dispatch","StackActions","replace","resizeMethod","navigate","SelectDocument","ErrorInfo","SetErrorInfo","toast","useToast","fileIsLoading","SetFileIsLoading","disabled","recordcallback","DocumentPicker","type","result","codes","length","data","toString","keyRef","some","keyword","includes","indexStartKey","indexEndKey","keywordBMKey","substring","keywordBMKeyFinal","slice","isNaN","year","parseInt","substr","day","month","date","Date","todayDate","getTime","getDate","padding","Linking","openURL","options","weekday","dateQR","toLocaleString","setItem","indexStart","indexEnd","keywordKey","CommonActions","reset","index","routes","id","duration","handlePDFUpload","configs","scale","once","start","step","stop","resultOpts","singleCodeInPage","multiCodesInPage","maxCodesInPage","improve","jsQR","PDF_QR_JS","decodeSinglePage","uri","Dimensions","get","screen","QrScanScreen","scanned","setScanned","facing","setFacing","invalidQR","setInvalidQR","dimensions","setDimensions","onChange","removeEventListener","textAlignVertical","margin","zIndex","minHeight","facingMode","onLoad","delay","onError","onScan","keywords","hide","offsetBottom","normalColor","goBack","handleBarCodeScanned","letterSpacing","QrTile","tileBg","setTileBg","tileBgTwo","setTileBgTwo","screenSkipSafeKey","setScreenSkipSafeKey","screenSkipVaccineKey","setScreenSkipVaccineKey","getSafekeyNoticeStatus","getVaccineNoticeStatus","myRef","React","createRef","hideMenu","current","document","useNavigation","LinearGradient","x","y","end","colors","paddingLeft","infoScreen","ref","removeItem","qrlist","btnCircle","infoPoints","QrList","undefined","vax","setVax","passkey","setPasskey","isOpen","setIsOpen","useFonts","OpenSans_400Regular","OpenSans_600SemiBold","fontsLoaded","holder","slideSpeed","direction","spacing","iconResting","Feather","iconActive","background","onClick","icon","PassInfo","isChecked","setChecked","checkboxAvailable","setCheckboxAvailable","Checkbox","isAvailableAsync","then","isAvailable","marginEnd","onValueChange","VaxInfo","ShowQrPass","passExpiry","setPassExpiry","getPassExpiry","quietZone","ShowQrVax","NotFound","nocam","image","button","NoCamera","learnUrl","setLearnUrl","DetectRTC","load","browser","isChrome","isEdge","isFirefox","isOpera","isSafari","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","Stack","createStackNavigator","App","hasLoaded","setHasLoaded","hasQR","setHasQR","OpenSans_700Bold","OpenSans_800ExtraBold","linking","prefixes","screens","Home","read","navigationRef","useRef","routeNameRef","NavigationContainer","onReady","getCurrentRoute","onStateChange","previousRouteName","currentRouteName","fallback","Navigator","screenOptions","headerTitleStyle","headerRight","initialRouteName","Screen","component","TransitionPresets","ModalSlideFromBottomIOS","title","headerTitle","cardStyleInterpolator","Platform","OS","cardStyle","opacity","progress","paddingRight","SelectDocumentScreen","animationTypeForReplace","QrListScreen","headerTitleAlign","PassInfoScreen","VaxInfoScreen","ShowQrScreenPass","ShowQrScreenVax","URL","process","href","origin","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/app.787c0229.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bm-logo.57a3e983.svg\";","module.exports = __webpack_public_path__ + \"static/media/file-text.a031f6ff.png\";","module.exports = __webpack_public_path__ + \"static/media/share-min.31430806.svg\";","module.exports = __webpack_public_path__ + \"static/media/qr-background.83209ff7.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.c560f04f.png\";","module.exports = __webpack_public_path__ + \"static/media/nocam.3d6e5311.png\";","import { StyleSheet } from \"react-native\";\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 20,\r\n    paddingBottom: 30,\r\n  },\r\n  containerTop: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    paddingHorizontal: 20,\r\n    paddingTop: 20,\r\n    flexWrap: \"wrap\",\r\n    width: \"100%\",\r\n    marginBottom: 120,\r\n  },\r\n  btn: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    borderRadius: 10,\r\n    paddingVertical: 11,\r\n  },\r\n  btnLine: {\r\n    borderWidth: 2.5,\r\n    borderColor: \"#1971ef\",\r\n  },\r\n  btnText: {\r\n    textAlign: \"center\",\r\n    fontSize: 18,\r\n  },\r\n  bold: {\r\n    textAlign: \"center\",\r\n    color: \"#333\",\r\n    fontFamily: \"OpenSans_600SemiBold\",\r\n  },\r\n  shadow: {\r\n    shadowColor: \"#470000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    elevation: 2,\r\n  },\r\n  text: {\r\n    color: \"#333\",\r\n    fontFamily: \"OpenSans_400Regular\",\r\n    fontSize: 14,\r\n  },\r\n  li: {\r\n    alignSelf: \"flex-start\",\r\n    color: \"black\",\r\n    fontFamily: \"OpenSans_400Regular\",\r\n    lineHeight: 30,\r\n    marginBottom: 30,\r\n    fontSize: 18,\r\n    textAlign: \"left\",\r\n    marginLeft: 0,\r\n    color: \"#333333\",\r\n  },\r\n  noticeHeader: {\r\n    fontFamily: \"OpenSans_600SemiBold\",\r\n    fontSize: 19,\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n    alignSelf: \"flex-start\",\r\n    color: \"#333333\",\r\n  },\r\n  QrHeader: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 30,\r\n    marginTop: 25,\r\n    color: \"#000\",\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  bmQrLogo: {\r\n    width: 55,\r\n    height: 80,\r\n    position: \"absolute\",\r\n  },\r\n});\r\n\r\nexport { styles };\r\n","import React from \"react\";\r\nimport { View, ActivityIndicator } from \"react-native\";\r\nimport { styles } from \"./styles\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <View style={[styles.container, { marginBottom: 0, paddingHorizontal: 0 }]}>\r\n      <ActivityIndicator color=\"#000f0f\" />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  SafeAreaView,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n} from \"react-native\";\r\nimport Modal from \"react-native-modal\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { styles } from \"../../screens/styles\";\r\n\r\nconst ModalComponent = (props) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const { show, onClose } = props;\r\n\r\n  useEffect(() => {\r\n    setShowModal(show);\r\n  }, [show]);\r\n\r\n  return (\r\n    <Modal\r\n      customBackdrop={\r\n        <SafeAreaView style={modalStyle.customBackdrop}></SafeAreaView>\r\n      }\r\n      animationIn=\"fadeInDownBig\"\r\n      isVisible={showModal}\r\n    >\r\n      <View style={styles.center}>\r\n        <View style={[modalStyle.modalInnerView, styles.center]}>\r\n          <View style={{ position: \"absolute\", top: 7, right: 7 }}>\r\n            <TouchableOpacity onPress={() => onClose()}>\r\n              <Ionicons name=\"close-outline\" size={28} color=\"black\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={[modalStyle.IconView, styles.center]}>\r\n            <View style={modalStyle.AppIcon}></View>\r\n            <View style={modalStyle.AppIcon}></View>\r\n            <View\r\n              style={[\r\n                modalStyle.AppIcon,\r\n                styles.shadow,\r\n                {\r\n                  marginRight: 4,\r\n                  width: 90,\r\n                  height: 90,\r\n                  borderRadius: 5,\r\n                },\r\n              ]}\r\n            >\r\n              <Image\r\n                source={require(\"../../assets/icon.png\")}\r\n                style={[\r\n                  {\r\n                    borderRadius: 5,\r\n                    width: 90,\r\n                    height: 90,\r\n                  },\r\n                ]}\r\n              />\r\n            </View>\r\n\r\n            <View style={modalStyle.AppIcon}></View>\r\n            <View style={modalStyle.AppIcon}></View>\r\n          </View>\r\n          <Text\r\n            style={[\r\n              styles.bold,\r\n              {\r\n                fontSize: 20,\r\n                fontFamily: \"OpenSans_700Bold\",\r\n                marginBottom: 20,\r\n              },\r\n            ]}\r\n          >\r\n            Install SafeKey Wallet\r\n          </Text>\r\n          <Text\r\n            style={[\r\n              styles.text,\r\n              {\r\n                marginHorizontal: 20,\r\n                textAlign: \"center\",\r\n                fontSize: 16,\r\n                marginBottom: 20,\r\n              },\r\n            ]}\r\n          >\r\n            Install SafeKey Wallet on your home screen for quick and easy access\r\n            when you're on the go.\r\n          </Text>\r\n          <View\r\n            style={[\r\n              styles.center,\r\n              {\r\n                backgroundColor: \"#f9f9f9\",\r\n                width: \"100%\",\r\n                paddingVertical: 15,\r\n              },\r\n            ]}\r\n          >\r\n            <Text style={[styles.center, styles.text]}>\r\n              Just tap\r\n              <Image\r\n                style={{\r\n                  width: 18,\r\n                  height: 18,\r\n                  marginHorizontal: 4,\r\n                  marginBottom: 3,\r\n                }}\r\n                source={require(\"../../assets/images/share-min.svg\")}\r\n              />\r\n              then 'Add to Home Screen'\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst modalStyle = StyleSheet.create({\r\n  customBackdrop: {\r\n    backgroundColor: \"black\",\r\n    position: \"sticky\",\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n  },\r\n  modalInnerView: {\r\n    maxWidth: 350,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 5,\r\n    overflow: \"hidden\",\r\n  },\r\n  IconView: {\r\n    overflow: \"hidden\",\r\n    flexDirection: \"row\",\r\n    marginVertical: 30,\r\n  },\r\n  AppIcon: {\r\n    width: 80,\r\n    height: 80,\r\n    backgroundColor: \"#f0f0f0\",\r\n    borderRadius: 5,\r\n    marginHorizontal: 4,\r\n    marginVertical: 8,\r\n  },\r\n});\r\n\r\nexport default ModalComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { styles } from \"../../screens/styles\";\r\nimport ModalComponent from \"../Modal/Modal\";\r\nimport * as Analytics from \"expo-firebase-analytics\";\r\n\r\nconst Version = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [devicePlatform, setDevicePlatform] = useState(null);\r\n  const [showInstallBtn, setShowInstallBtn] = useState(false);\r\n\r\n  function getOS() {\r\n    var userAgent = window.navigator.userAgent,\r\n      platform = window.navigator.platform,\r\n      macosPlatforms = [\"Macintosh\", \"MacIntel\", \"MacPPC\", \"Mac68K\"],\r\n      windowsPlatforms = [\"Win32\", \"Win64\", \"Windows\", \"WinCE\"],\r\n      iosPlatforms = [\"iPhone\", \"iPad\", \"iPod\"],\r\n      os = null;\r\n\r\n    if (macosPlatforms.indexOf(platform) !== -1) {\r\n      os = \"Mac OS\";\r\n      setShowInstallBtn(false);\r\n    } else if (iosPlatforms.indexOf(platform) !== -1) {\r\n      os = \"iOS\";\r\n      setShowInstallBtn(true);\r\n    } else if (windowsPlatforms.indexOf(platform) !== -1) {\r\n      os = \"Windows\";\r\n      setShowInstallBtn(false);\r\n    } else if (/Android/.test(userAgent)) {\r\n      os = \"Android\";\r\n    } else if (!os && /Linux/.test(platform)) {\r\n      os = \"Linux\";\r\n      setShowInstallBtn(false);\r\n    }\r\n    // return os;\r\n    setDevicePlatform(os);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getOS();\r\n  }, []);\r\n\r\n  window.addEventListener(\"beforeinstallprompt\", (event) => {\r\n    // Stash the event so it can be triggered later.\r\n    window.deferredPrompt = event;\r\n    // Update UI notify the user they can install the PWA\r\n    if (devicePlatform === \"Android\") {\r\n      setShowInstallBtn(true);\r\n    }\r\n  });\r\n\r\n  const handleInstallBtnClick = async () => {\r\n    const promptEvent = window.deferredPrompt;\r\n    if (!promptEvent) {\r\n      // The deferred prompt isn't available.\r\n      console.error(\"👎\", \"The deferred prompt is not available.\");\r\n    }\r\n    // Show the install prompt.\r\n    promptEvent.prompt();\r\n    // Log the result\r\n    const result = await promptEvent.userChoice;\r\n    // Reset the deferred prompt variable, since\r\n    // prompt() can only be called once.\r\n    window.deferredPrompt = null;\r\n  };\r\n\r\n  window.addEventListener(\"appinstalled\", () => {\r\n    // Hide the app-provided install promotion\r\n    setShowInstallBtn(false);\r\n    // Clear the deferredPrompt so it can be garbage collected\r\n    window.deferredPrompt = null;\r\n    // Sending analytics event to indicate successful install\r\n    Analytics.logEvent(\"AppInstalled\", {\r\n      purpose: \"User has installed PWA\",\r\n    });\r\n    console.log(\"PWA was installed\");\r\n  });\r\n\r\n  function isInstalled() {\r\n    // For iOS\r\n    if (window.navigator.standalone) return true;\r\n\r\n    // For Android\r\n    if (window.matchMedia(\"(display-mode: standalone)\").matches) return true;\r\n\r\n    // If neither is true, it's not installed\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={[\r\n          VersionStyle.container,\r\n          {\r\n            marginBottom: \"calc(0em + env(safe-area-inset-bottom))\",\r\n            position: \"sticky\",\r\n          },\r\n        ]}\r\n      >\r\n        <Text style={VersionStyle.text}>Version: 1.2.1</Text>\r\n        {showInstallBtn && !isInstalled() ? (\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              if (devicePlatform === \"iOS\") {\r\n                setModalVisible(true);\r\n              } else if (devicePlatform === \"Android\") {\r\n                handleInstallBtnClick();\r\n              } else {\r\n                console.error(\r\n                  \"Progressive web app installation is not supported on this device\"\r\n                );\r\n              }\r\n            }}\r\n            style={[\r\n              styles.center,\r\n              {\r\n                borderRadius: 50,\r\n                backgroundColor: \"#1971ef\",\r\n                shadowColor: \"#0a418f\",\r\n              },\r\n            ]}\r\n          >\r\n            <Text style={[VersionStyle.btnText]}>Install</Text>\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </View>\r\n      <ModalComponent\r\n        onClose={() => setModalVisible(false)}\r\n        show={modalVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst VersionStyle = StyleSheet.create({\r\n  container: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: 50,\r\n    backgroundColor: \"#f5f5f5\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    paddingHorizontal: 15,\r\n  },\r\n  text: {\r\n    color: \"#0000008c\",\r\n  },\r\n  btnText: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 5,\r\n    fontSize: 14,\r\n    color: \"#fff\",\r\n  },\r\n});\r\n\r\nexport default Version;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, TouchableOpacity, Image } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport Loading from \"./Loading\";\r\nimport { styles } from \"./styles\";\r\nimport { useAssets } from \"expo-asset\";\r\nimport Version from \"../components/Version/Version\";\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [passExists, setPassExists] = useState(null);\r\n  const [vaxExists, setVaxExists] = useState(null);\r\n\r\n  const [assets] = useAssets([\r\n    require(\"../assets/images/qr-background.svg\"),\r\n    require(\"../assets/images/bm-logo.svg\"),\r\n    require(\"../assets/images/share-min.svg\"),\r\n  ]);\r\n  useEffect(() => {\r\n    try {\r\n      async function getPasskey() {\r\n        const value = await AsyncStorage.getItem(\"BM.KEY\");\r\n        if (value !== null) {\r\n          setPassExists(true);\r\n        } else {\r\n          setPassExists(false);\r\n        }\r\n      }\r\n      getPasskey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [passExists]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getVax() {\r\n        const value = await AsyncStorage.getItem(\"BM.VAX\");\r\n        if (value !== null) {\r\n          setVaxExists(true);\r\n        } else {\r\n          setVaxExists(false);\r\n        }\r\n      }\r\n      getVax();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  useEffect(() => {\r\n    if (vaxExists === true || passExists === true) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [vaxExists, passExists]);\r\n\r\n  return (\r\n    <>\r\n      {!assets ? (\r\n        <Loading />\r\n      ) : (\r\n        <View\r\n          style={[\r\n            styles.container,\r\n            {\r\n              paddingBottom: 50,\r\n            },\r\n          ]}\r\n        >\r\n          <View>\r\n            <Image\r\n              resizeMethod=\"auto\"\r\n              style={{ height: 150, width: 170, marginTop: 25 }}\r\n              source={require(\"../assets/images/qr-background.svg\")}\r\n            />\r\n          </View>\r\n          <Text style={[styles.bold, { marginBottom: 2, fontSize: 18 }]}>\r\n            No SafeKeys found\r\n          </Text>\r\n          <Text\r\n            style={[\r\n              styles.text,\r\n              { marginTop: 0, marginBottom: 15, textAlign: \"center\" },\r\n            ]}\r\n          >\r\n            Press Scan or Select to add one.\r\n          </Text>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              navigation.navigate(\"Scan QR\");\r\n            }}\r\n            style={[\r\n              styles.btn,\r\n              styles.shadow,\r\n              { backgroundColor: \"#1971ef\", borderWidth: 0 },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.btnText,\r\n                {\r\n                  color: \"white\",\r\n                },\r\n              ]}\r\n            >\r\n              Scan Document\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.btn,\r\n              styles.shadow,\r\n              styles.btnLine,\r\n              {\r\n                backgroundColor: \"#fff\",\r\n                marginTop: 16,\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(\"Select Document\");\r\n            }}\r\n          >\r\n            <Text style={[styles.btnText, { color: \"#1971ef\" }]}>\r\n              Select Document\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n      <Version />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState } from \"react\";\r\nimport { View, Text, TouchableOpacity, Image, Linking } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\nimport * as DocumentPicker from \"expo-document-picker\";\r\nimport { useToast } from \"react-native-toast-notifications\";\r\nimport { styles } from \"./styles\";\r\n\r\nimport { useAssets } from \"expo-asset\";\r\nimport Version from \"../components/Version/Version\";\r\nimport { PDF_QR_JS } from \"pdf-qr\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport Loading from \"./Loading\";\r\nimport * as Analytics from \"expo-firebase-analytics\";\r\n\r\nconst SelectDocument = ({ navigation }) => {\r\n  const [ErrorInfo, SetErrorInfo] = useState(\"\");\r\n  const toast = useToast();\r\n  const [assets] = useAssets([require(\"../assets/images/file-text.png\")]);\r\n  const [fileIsLoading, SetFileIsLoading] = useState(false);\r\n\r\n  const PickDocument = async () => {\r\n    try {\r\n      let result = await DocumentPicker.getDocumentAsync({\r\n        type: \"application/pdf\",\r\n      });\r\n      if (result.type !== \"cancel\") {\r\n        // PDF page target\r\n        const pageNr = 1;\r\n        // qr scanning configuration\r\n        const configs = {\r\n          scale: {\r\n            once: true,\r\n            value: 5,\r\n            start: 0.2,\r\n            step: 0.2,\r\n            stop: 2,\r\n          },\r\n          resultOpts: {\r\n            singleCodeInPage: true,\r\n            multiCodesInPage: false,\r\n            maxCodesInPage: 1,\r\n          },\r\n          improve: true,\r\n          jsQR: {},\r\n        };\r\n        SetErrorInfo(\r\n          <View style={{ marginTop: 20 }}>\r\n            <ClipLoader size=\"14px\" color=\"#1971ef\" />\r\n          </View>\r\n        );\r\n        SetFileIsLoading(true);\r\n        PDF_QR_JS.decodeSinglePage(result.uri, pageNr, configs, recordcallback);\r\n\r\n        function recordcallback(result) {\r\n          // check if array is empty\r\n          if (result.codes.length === 0) {\r\n            console.error(\"No QR Found\");\r\n            SetErrorInfo(\r\n              <View style={{ marginTop: 15 }}>\r\n                <Text style={styles.text}>\r\n                  SafeKey QR Code not detected. Please try again.\r\n                </Text>\r\n              </View>\r\n            );\r\n            SetFileIsLoading(false);\r\n            return;\r\n          }\r\n          const handlePDFUpload = async () => {\r\n            const data = result.codes.toString();\r\n            const keywords = [\":BM.KEY:\", \":BM.VAX:\"];\r\n            const keyRef = [\":BM.KEY:\"];\r\n            if (keywords.some((keyword) => data.includes(keyword))) {\r\n              if (keyRef.some((keyword) => data.includes(keyword))) {\r\n                let indexStartKey = data.indexOf(\":\", 130);\r\n                let indexEndKey = data.indexOf(\"/\");\r\n                let keywordBMKey = data.substring(indexStartKey, indexEndKey);\r\n                let keywordBMKeyFinal = keywordBMKey.slice(1);\r\n                if (!isNaN(keywordBMKeyFinal)) {\r\n                  let year = parseInt(keywordBMKeyFinal.substr(0, 4), 10);\r\n                  let day = parseInt(keywordBMKeyFinal.substr(6), 10);\r\n                  let month = parseInt(keywordBMKeyFinal.substr(4, 2), 10);\r\n\r\n                  let date = new Date(year, month - 1, day);\r\n                  let todayDate = new Date();\r\n                  if (date.getTime() < todayDate.getTime()) {\r\n                    // If the date is in the past, show a toast\r\n                    if (date.getDate() < todayDate.getDate()) {\r\n                      SetFileIsLoading(false);\r\n                      return SetErrorInfo(\r\n                        <View\r\n                          style={[\r\n                            styles.center,\r\n                            {\r\n                              width: \"100%\",\r\n                              maxWidth: 500,\r\n                              marginTop: 20,\r\n                              padding: 10,\r\n                              textAlign: \"center\",\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Text\r\n                            style={[\r\n                              styles.text,\r\n                              {\r\n                                color: \"red\",\r\n                                fontFamily: \"OpenSans_600SemiBold\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            This SafeKey has expired. Click the button below to\r\n                            visit the SafeKey renewal page.{\" \"}\r\n                          </Text>\r\n\r\n                          <TouchableOpacity\r\n                            style={[\r\n                              styles.btn,\r\n                              styles.shadow,\r\n                              styles.btnLine,\r\n                              {\r\n                                marginTop: 10,\r\n                              },\r\n                            ]}\r\n                            onPress={() =>\r\n                              Linking.openURL(\"https://www.gov.bm/safekey\")\r\n                            }\r\n                          >\r\n                            <Text\r\n                              style={[styles.btnText, { color: \"#1971ef\" }]}\r\n                            >\r\n                              Renew\r\n                            </Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      );\r\n                    }\r\n                  }\r\n\r\n                  let options = {\r\n                    weekday: \"long\",\r\n                    year: \"numeric\",\r\n                    month: \"long\",\r\n                    day: \"numeric\",\r\n                  };\r\n                  const dateQR = date.toLocaleString(\"en-US\", options);\r\n                  await AsyncStorage.setItem(\"passExpiry\", dateQR);\r\n                } else {\r\n                  console.error(\"parsed date is not a number\");\r\n                }\r\n              }\r\n              // take payload name and set as Key with the value being the parsed QR data. Every payload name is found\r\n              // between two colons in the parsed QR data\r\n              let indexStart = data.indexOf(\":\");\r\n              indexStart += 1;\r\n              let indexEnd = data.indexOf(\":\", indexStart + 1);\r\n              let keywordKey = data.substring(indexStart, indexEnd);\r\n              await AsyncStorage.setItem(keywordKey, data);\r\n              Analytics.logEvent(\"DocumentAdded\", {\r\n                type:\r\n                  keywordKey === \"BM.KEY\"\r\n                    ? \"SafeKey\"\r\n                    : \"Vaccination Certificate\",\r\n                purpose: \"User has added their SafeKey document\",\r\n              });\r\n              // Navigate to a different screen while passing the parsed QR data with it\r\n              navigation.dispatch(\r\n                CommonActions.reset({\r\n                  index: 0,\r\n                  routes: [{ name: \"QR List\" }],\r\n                })\r\n              );\r\n              toast.show(\r\n                keywordKey === \"BM.KEY\" ? (\r\n                  <View>\r\n                    <Text style={[styles.bold, { color: \"#fff\" }]}>\r\n                      SafeKey Added\r\n                    </Text>\r\n                  </View>\r\n                ) : (\r\n                  <View>\r\n                    <Text style={[styles.bold, { color: \"#fff\" }]}>\r\n                      Vaccination Certificate Added\r\n                    </Text>\r\n                  </View>\r\n                ),\r\n                {\r\n                  id: 3,\r\n                  type: \"success\",\r\n                  duration: 3500,\r\n                }\r\n              );\r\n            }\r\n          };\r\n          handlePDFUpload();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!assets ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <View style={styles.container}>\r\n            <Text\r\n              style={{\r\n                textAlign: \"center\",\r\n                marginBottom: 0.5,\r\n                fontSize: 16,\r\n                marginBottom: 16,\r\n                lineHeight: 24,\r\n              }}\r\n            >\r\n              Add your SafeKey to your wallet by selecting your{\" \"}\r\n              <Text style={{ fontWeight: \"bold\" }}>SafeKey PDF Document </Text>\r\n              or{\" \"}\r\n              <Text style={{ fontWeight: \"bold\" }}>\r\n                Vaccination Certificate PDF Document\r\n              </Text>\r\n            </Text>\r\n            <Text\r\n              style={[\r\n                styles.text,\r\n                { fontWeight: \"bold\", marginTop: 15, marginBottom: 15 },\r\n              ]}\r\n            >\r\n              Select your PDF Document\r\n            </Text>\r\n            <TouchableOpacity\r\n              disabled={fileIsLoading}\r\n              style={[\r\n                styles.btn,\r\n                styles.shadow,\r\n                { backgroundColor: fileIsLoading ? \"#1a73ef80\" : \"#1971ef\" },\r\n              ]}\r\n              onPress={PickDocument}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.center,\r\n                  {\r\n                    textAlign: \"center\",\r\n                    color: \"white\",\r\n                    fontSize: 17,\r\n                  },\r\n                ]}\r\n              >\r\n                <Image\r\n                  style={{ width: 20, height: 20, marginRight: 8 }}\r\n                  source={require(\"../assets/images/file-text.png\")}\r\n                />\r\n                Select\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <Text>{ErrorInfo ? ErrorInfo : \"\"}</Text>\r\n          </View>\r\n          <Version />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default SelectDocument;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Linking,\r\n} from \"react-native\";\r\n\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\n\r\nimport QrReader from \"react-qr-reader\";\r\nimport * as Analytics from \"expo-firebase-analytics\";\r\nimport { useToast } from \"react-native-toast-notifications\";\r\nimport { styles } from \"./styles\";\r\n\r\nconst window = Dimensions.get(\"window\");\r\nconst screen = Dimensions.get(\"screen\");\r\n\r\nconst QrScanScreen = ({ navigation }) => {\r\n  const [scanned, setScanned] = useState(false);\r\n  const [facing, setFacing] = useState(\"environment\");\r\n  const [invalidQR, setInvalidQR] = useState(false);\r\n  const [dimensions, setDimensions] = useState({ window, screen });\r\n  const toast = useToast();\r\n\r\n  const onChange = ({ window, screen }) => {\r\n    setDimensions({ window, screen });\r\n  };\r\n\r\n  const changeFacing = () => {\r\n    facing === \"environment\" ? setFacing(\"user\") : setFacing(\"environment\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    Dimensions.addEventListener(\"change\", onChange);\r\n    return () => {\r\n      Dimensions.removeEventListener(\"change\", onChange);\r\n    };\r\n  });\r\n\r\n  const handleBarCodeScanned = async (data) => {\r\n    const keywords = [\":BM.KEY:\", \":BM.VAX:\"];\r\n    const keyRef = [\":BM.KEY:\"];\r\n    if (data !== null) {\r\n      // Find keywords that match our array of items\r\n      if (keywords.some((keyword) => data.includes(keyword))) {\r\n        // Gets date from pass and checks to see if it's a number\r\n        if (keyRef.some((keyword) => data.includes(keyword))) {\r\n          let indexStartKey = data.indexOf(\":\", 130);\r\n          let indexEndKey = data.indexOf(\"/\");\r\n          let keywordBMKey = data.substring(indexStartKey, indexEndKey);\r\n          let keywordBMKeyFinal = keywordBMKey.slice(1);\r\n\r\n          if (!isNaN(keywordBMKeyFinal)) {\r\n            let year = parseInt(keywordBMKeyFinal.substr(0, 4), 10);\r\n            let day = parseInt(keywordBMKeyFinal.substr(6), 10);\r\n            let month = parseInt(keywordBMKeyFinal.substr(4, 2), 10);\r\n\r\n            let date = new Date(year, month - 1, day);\r\n            let todayDate = new Date();\r\n\r\n            if (date.getTime() < todayDate.getTime()) {\r\n              // If the date is in the past, show a toast\r\n              toast.show(\r\n                <View>\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      Linking.openURL(\"https://www.gov.bm/safekey\");\r\n                      toast.hide(1);\r\n                    }}\r\n                  >\r\n                    <Text style={[styles.bold, { color: \"#fff\" }]}>\r\n                      This SafeKey has expired\r\n                    </Text>\r\n                    <Text\r\n                      style={[\r\n                        styles.text,\r\n                        { color: \"#fff\", textAlign: \"center\" },\r\n                      ]}\r\n                    >\r\n                      Click here to renew it\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>,\r\n                {\r\n                  offsetBottom: 50,\r\n                  id: 1,\r\n                  position: \"bottom\",\r\n                  duration: 0,\r\n                  type: \"normal\",\r\n                  normalColor: \"#ff4d4d\",\r\n                }\r\n              );\r\n              return navigation.goBack();\r\n            }\r\n\r\n            let options = {\r\n              weekday: \"long\",\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n            };\r\n            const dateQR = date.toLocaleString(\"en-US\", options);\r\n            await AsyncStorage.setItem(\"passExpiry\", dateQR);\r\n          } else {\r\n            console.log(\"parsed date is not a number\");\r\n          }\r\n        }\r\n        // take payload name and set as Key with the value being the parsed QR data. Every payload name is found\r\n        // between two colons in the parsed QR data\r\n        let indexStart = data.indexOf(\":\");\r\n        indexStart += 1;\r\n        let indexEnd = data.indexOf(\":\", indexStart + 1);\r\n        let keywordKey = data.substring(indexStart, indexEnd);\r\n        await AsyncStorage.setItem(keywordKey, data);\r\n        setScanned(true);\r\n        Analytics.logEvent(\"DocumentScanned\", {\r\n          type: keywordKey === \"BM.KEY\" ? \"SafeKey\" : \"Vaccination Certificate\",\r\n          purpose: \"User has scanned their SafeKey QR code.\",\r\n        });\r\n        // Navigate to a different screen while passing the parsed QR data with it\r\n        navigation.dispatch(\r\n          CommonActions.reset({ index: 0, routes: [{ name: \"QR List\" }] })\r\n        );\r\n        toast.show(\r\n          keywordKey === \"BM.KEY\" ? (\r\n            <View>\r\n              <Text style={[styles.bold, { color: \"#fff\" }]}>\r\n                SafeKey Added\r\n              </Text>\r\n            </View>\r\n          ) : (\r\n            <View>\r\n              <Text style={[styles.bold, { color: \"#fff\" }]}>\r\n                Vaccination Certificate Added\r\n              </Text>\r\n            </View>\r\n          ),\r\n          {\r\n            id: 3,\r\n            type: \"success\",\r\n            duration: 3500,\r\n          }\r\n        );\r\n      } else {\r\n        setInvalidQR(true);\r\n      }\r\n    } else {\r\n      setScanned(false);\r\n      setInvalidQR(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.container,\r\n        {\r\n          backgroundColor: \"#000\",\r\n          marginBottom: 0,\r\n        },\r\n      ]}\r\n    >\r\n      <View\r\n        style={[\r\n          styles.center,\r\n          {\r\n            backgroundColor: \"#000\",\r\n            fontSize: 16,\r\n            lineHeight: 50,\r\n            textAlign: \"center\",\r\n            position: \"relative\",\r\n            textAlignVertical: \"center\",\r\n            margin: 0,\r\n            zIndex: 10,\r\n            fontSize: 16,\r\n            flex: 1,\r\n            minHeight: 80,\r\n          },\r\n        ]}\r\n      >\r\n        <Text style={{ color: \"#f1f1f1\", marginBottom: 5, marginTop: 15 }}>\r\n          Scan your SafeKey Document QR code\r\n        </Text>\r\n        <Text style={{ color: \"#f1f1f1\" }}>Keep camera steady</Text>\r\n        <Text\r\n          style={{\r\n            color: invalidQR ? \"#ffbb33\" : \"#28a745\",\r\n            marginTop: 10,\r\n            fontFamily: \"OpenSans_600SemiBold\",\r\n          }}\r\n        >\r\n          {invalidQR ? \"INVALID QR\" : \"SCANNING\"}\r\n        </Text>\r\n      </View>\r\n\r\n      <QrReader\r\n        facingMode={facing}\r\n        onLoad={() => {\r\n          console.log(\"QR Reader Loaded\");\r\n        }}\r\n        delay={300}\r\n        onError={(error) => {\r\n          console.log(error.name);\r\n          if (error.name === \"NotAllowedError\") {\r\n            navigation.dispatch(\r\n              CommonActions.reset({ index: 0, routes: [{ name: \"NoCamera\" }] })\r\n            );\r\n          }\r\n        }}\r\n        onScan={(data) => {\r\n          scanned ? undefined : handleBarCodeScanned(data);\r\n        }}\r\n        style={{\r\n          width: dimensions.window.width < 565 ? \"100%\" : 510,\r\n          alignSelf: \"center\",\r\n        }}\r\n      />\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <TouchableOpacity\r\n          onPress={changeFacing}\r\n          style={{\r\n            paddingHorizontal: 10,\r\n            alignSelf: \"center\",\r\n            backgroundColor: \"#1971ef\",\r\n            paddingVertical: 10,\r\n            borderRadius: 5,\r\n            marginBottom: 25,\r\n            marginTop: 25,\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              color: \"white\",\r\n              textAlign: \"center\",\r\n              letterSpacing: 1,\r\n              fontFamily: \"OpenSans_400Regular\",\r\n            }}\r\n          >\r\n            Switch Camera\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default QrScanScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { removeValue } from \"./script\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { styles } from \"../../screens/styles\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nconst QrTile = (props) => {\r\n  const [tileBg, setTileBg] = useState(\"#000\");\r\n  const [tileBgTwo, setTileBgTwo] = useState(\"#000\");\r\n  const [screenSkipSafeKey, setScreenSkipSafeKey] = useState(false);\r\n  const [screenSkipVaccineKey, setScreenSkipVaccineKey] = useState(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getSafekeyNoticeStatus() {\r\n        const value = await AsyncStorage.getItem(\"no_notice_safekey\");\r\n        if (value !== null) {\r\n          setScreenSkipSafeKey(value);\r\n        }\r\n      }\r\n      getSafekeyNoticeStatus();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getVaccineNoticeStatus() {\r\n        const value = await AsyncStorage.getItem(\"no_notice_vaccine\");\r\n        if (value !== null) {\r\n          setScreenSkipVaccineKey(value);\r\n        }\r\n      }\r\n      getVaccineNoticeStatus();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, []);\r\n\r\n  const myRef = React.createRef();\r\n\r\n  const showMenu = () => {\r\n    myRef.current.style.display = \"flex\";\r\n    document.addEventListener(\"click\", hideMenu);\r\n  };\r\n\r\n  const hideMenu = () => {\r\n    if (myRef.current) {\r\n      myRef.current.style.display = \"none\";\r\n      document.removeEventListener(\"click\", hideMenu);\r\n    } else return;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.name == \"Vaccination Certificate\") {\r\n      setTileBg(\"#fc9cc7\");\r\n      setTileBgTwo(\"#fc9cc7\");\r\n    } else if (props.name == \"SafeKey\") {\r\n      setTileBg(\"#5299e1\");\r\n      setTileBgTwo(\"#66b0ff\");\r\n    }\r\n  }, [props.name]);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <View style={{ width: \"100%\" }}>\r\n      <LinearGradient\r\n        start={{ x: 1, y: 0 }}\r\n        end={{ x: 0, y: 0 }}\r\n        colors={[tileBg, tileBgTwo]}\r\n        style={[\r\n          styles.shadow,\r\n          {\r\n            width: \"100%\",\r\n            marginBottom: 15,\r\n            paddingLeft: 15,\r\n            borderRadius: 10,\r\n          },\r\n        ]}\r\n      >\r\n        <TouchableOpacity\r\n          style={{\r\n            justifyContent: \"space-between\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n          onPress={() => {\r\n            if (props.infoScreen === \"SafeKey Notice\") {\r\n              if (screenSkipSafeKey) {\r\n                navigation.navigate(\"SafeKey QR\");\r\n              } else if (!screenSkipSafeKey) {\r\n                navigation.navigate(\"SafeKey Notice\");\r\n              }\r\n            }\r\n            if (props.infoScreen === \"Vaccination Notice\") {\r\n              if (screenSkipVaccineKey) {\r\n                navigation.navigate(\"Vaccination Certificate QR\");\r\n              } else if (!screenSkipVaccineKey) {\r\n                navigation.navigate(\"Vaccination Notice\");\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          <View style={{ paddingVertical: 15 }}>\r\n            <Text\r\n              style={{\r\n                fontFamily: \"OpenSans_600SemiBold\",\r\n                color: \"white\",\r\n                textAlign: \"left\",\r\n                fontSize: 16,\r\n              }}\r\n            >\r\n              {props.name}\r\n            </Text>\r\n          </View>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              showMenu();\r\n            }}\r\n            style={[\r\n              styles.center,\r\n              {\r\n                height: \"100%\",\r\n                width: 50,\r\n                flexDirection: \"row\",\r\n              },\r\n            ]}\r\n          >\r\n            <Ionicons name=\"ios-ellipsis-vertical\" size={24} color=\"white\" />\r\n          </TouchableOpacity>\r\n          <View\r\n            style={[\r\n              styles.shadow,\r\n              {\r\n                display: \"none\",\r\n                flexDirection: \"column\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: 5,\r\n                position: \"absolute\",\r\n                right: 40,\r\n                top: 11,\r\n              },\r\n            ]}\r\n            ref={myRef}\r\n          >\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                removeValue(props.type);\r\n                props.removeItem();\r\n              }}\r\n              style={{\r\n                paddingHorizontal: 20,\r\n                paddingVertical: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontFamily: \"OpenSans_400Regular\", color: \"#dc3545\" }}\r\n              >\r\n                Delete\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default QrTile;\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport * as Analytics from \"expo-firebase-analytics\";\r\n\r\nexport const removeValue = async (value) => {\r\n  try {\r\n    if (value === \"BM.KEY\") {\r\n      await AsyncStorage.removeItem(\"passExpiry\");\r\n      await AsyncStorage.removeItem(\"no_notice_safekey\");\r\n    } else if (value === \"BM.VAX\") {\r\n      await AsyncStorage.removeItem(\"no_notice_vaccine\");\r\n    }\r\n    await AsyncStorage.removeItem(value);\r\n    // Send analytics when user deletes safekey\r\n    Analytics.logEvent(\"QrDeleted\", {\r\n      type: value === \"BM.KEY\" ? \"SafeKey\" : \"Vaccination Certificate\",\r\n      purpose: \"user deleted a safekey\",\r\n    });\r\n  } catch (e) {\r\n    alert(e);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, Image } from \"react-native\";\r\nimport { styles } from \"./styles\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useAssets } from \"expo-asset\";\r\nimport Loading from \"./Loading\";\r\n\r\nimport Version from \"../components/Version/Version\";\r\nimport QrTile from \"../components/QrTile/QrTile\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport {\r\n  useFonts,\r\n  OpenSans_400Regular,\r\n  OpenSans_600SemiBold,\r\n} from \"@expo-google-fonts/open-sans\";\r\n\r\nimport {\r\n  FloatingMenu,\r\n  MainButton,\r\n  ChildButton,\r\n} from \"react-floating-button-menu\";\r\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\r\n\r\nconst QrList = ({ navigation }) => {\r\n  const [vax, setVax] = useState(undefined);\r\n  const [passkey, setPasskey] = useState(undefined);\r\n  const [passExists, setPassExists] = useState();\r\n  const [vaxExists, setVaxExists] = useState();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const [assets] = useAssets([\r\n    require(\"../assets/images/file-text.png\"),\r\n    require(\"../assets/images/camera.png\"),\r\n  ]);\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    OpenSans_400Regular,\r\n    OpenSans_600SemiBold,\r\n  });\r\n\r\n  const noVaxExists = () => {\r\n    setVaxExists(false);\r\n  };\r\n\r\n  const noPassExists = () => {\r\n    setPassExists(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getPasskey() {\r\n        const value = await AsyncStorage.getItem(\"BM.KEY\");\r\n        if (value !== null) {\r\n          setPasskey(value);\r\n          setPassExists(true);\r\n        } else {\r\n          setPassExists(false);\r\n        }\r\n      }\r\n      getPasskey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [passExists]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getVax() {\r\n        const value = await AsyncStorage.getItem(\"BM.VAX\");\r\n        if (value !== null) {\r\n          setVax(value);\r\n          setVaxExists(true);\r\n        } else {\r\n          setVaxExists(false);\r\n        }\r\n      }\r\n      getVax();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  useEffect(() => {\r\n    if (vaxExists === false && passExists === false) {\r\n      navigation.dispatch(StackActions.replace(\"Home\"));\r\n    }\r\n  }, [vaxExists, passExists]);\r\n\r\n  return (\r\n    <View style={{ backgroundColor: \"#fff\", flex: 1 }}>\r\n      {!assets && !fontsLoaded ? (\r\n        <Loading />\r\n      ) : (\r\n        <View style={styles.containerTop}>\r\n          <View\r\n            style={[\r\n              styles.center,\r\n              {\r\n                alignSelf: \"center\",\r\n                backgroundColor: \"#f9f9f9\",\r\n                padding: 20,\r\n                paddingBottom: 35,\r\n                marginBottom: 25,\r\n                marginTop: 5,\r\n                width: \"100%\",\r\n                maxWidth: 650,\r\n                borderRadius: 10,\r\n                borderWidth: 1,\r\n                borderColor: \"#dadada\",\r\n              },\r\n            ]}\r\n          >\r\n            <Text>\r\n              <Text\r\n                style={{\r\n                  fontSize: 18,\r\n                  alignSelf: \"flex-start\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                  color: \"#919191\",\r\n                  display: \"block\",\r\n                }}\r\n              >\r\n                Guide\r\n              </Text>\r\n              {\"\\n\"}\r\n              <Text style={{ fontSize: 14, color: \"#919191\" }}>{\"\\u2022\"}</Text>\r\n              <Text style={qrlist.infoPoints}>\r\n                {\" \"}\r\n                SafeKey Wallet currently supports two QR Codes. Vaccination\r\n                Certificate & SafeKey.\r\n              </Text>\r\n              {\"\\n\"}\r\n              <Text style={{ display: \"block\" }}> </Text>\r\n              <Text style={{ fontSize: 14, color: \"#919191\" }}>{\"\\u2022\"}</Text>\r\n              <Text style={qrlist.infoPoints}>\r\n                {\" \"}\r\n                Select the QR you want to present. Read the information on the\r\n                next screen carefully, then continue.\r\n              </Text>\r\n              {\"\\n\"}\r\n              <Text style={{ display: \"block\" }}> </Text>\r\n              <Text style={{ fontSize: 14, color: \"#919191\" }}>{\"\\u2022\"}</Text>\r\n              <Text style={qrlist.infoPoints}>\r\n                {\" \"}\r\n                When your SafeKey expires, you can add another by first deleting\r\n                the expired one, then clicking the plus button and selecting\r\n                either the camera button or the document button.\r\n              </Text>\r\n            </Text>\r\n          </View>\r\n          {vaxExists ? (\r\n            <QrTile\r\n              name=\"Vaccination Certificate\"\r\n              type=\"BM.VAX\"\r\n              holder=\"John Doe\"\r\n              removeItem={noVaxExists}\r\n              infoScreen=\"Vaccination Notice\"\r\n              data={vax}\r\n            />\r\n          ) : (\r\n            <Text></Text>\r\n          )}\r\n          {passExists ? (\r\n            <QrTile\r\n              name=\"SafeKey\"\r\n              type=\"BM.KEY\"\r\n              holder=\"John Doe\"\r\n              removeItem={noPassExists}\r\n              infoScreen=\"SafeKey Notice\"\r\n              data={passkey}\r\n            />\r\n          ) : (\r\n            <Text></Text>\r\n          )}\r\n\r\n          {!vaxExists ^ !passExists ? (\r\n            <View\r\n              style={{\r\n                position: \"absolute\",\r\n                bottom: -60,\r\n                right: 20,\r\n              }}\r\n            >\r\n              <FloatingMenu\r\n                slideSpeed={500}\r\n                direction=\"left\"\r\n                spacing={8}\r\n                isOpen={isOpen}\r\n                style={(qrlist.btnCircle, styles.shadow)}\r\n              >\r\n                <MainButton\r\n                  iconResting={<Feather name=\"plus\" size={24} color=\"white\" />}\r\n                  iconActive={\r\n                    <Ionicons name=\"close-outline\" size={24} color=\"white\" />\r\n                  }\r\n                  background=\"#1971ef\"\r\n                  onClick={() => setIsOpen(!isOpen)}\r\n                  size={56}\r\n                />\r\n                <ChildButton\r\n                  icon={\r\n                    <Image\r\n                      id=\"camera\"\r\n                      style={{ height: 20, width: 20 }}\r\n                      source={require(\"../assets/images/camera.png\")}\r\n                    />\r\n                  }\r\n                  background=\"#1971ef\"\r\n                  size={40}\r\n                  onClick={() => {\r\n                    setIsOpen(!isOpen);\r\n                    navigation.navigate(\"Scan QR\");\r\n                  }}\r\n                />\r\n                <ChildButton\r\n                  icon={\r\n                    <Image\r\n                      style={{ width: 20, height: 20 }}\r\n                      source={require(\"../assets/images/file-text.png\")}\r\n                    />\r\n                  }\r\n                  background=\"#1971ef\"\r\n                  size={40}\r\n                  onClick={() => {\r\n                    setIsOpen(!isOpen);\r\n                    navigation.navigate(\"Select Document\");\r\n                  }}\r\n                />\r\n              </FloatingMenu>\r\n            </View>\r\n          ) : (\r\n            <Text></Text>\r\n          )}\r\n        </View>\r\n      )}\r\n      <Version />\r\n    </View>\r\n  );\r\n};\r\nconst qrlist = StyleSheet.create({\r\n  btnCircle: {\r\n    width: 55,\r\n    height: 55,\r\n    borderRadius: 50,\r\n    position: \"absolute\",\r\n    bottom: 20,\r\n    right: 20,\r\n    backgroundColor: \"#1971ef\",\r\n  },\r\n  infoPoints: {\r\n    fontSize: 10,\r\n    fontFamily: \"OpenSans_400Regular\",\r\n    color: \"#919191\",\r\n    marginBottom: -10,\r\n  },\r\n});\r\n\r\nexport default QrList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\n\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { styles } from \"./styles\";\r\nimport Checkbox from \"expo-checkbox\";\r\nimport Version from \"../components/Version/Version\";\r\n\r\nconst PassInfo = ({ navigation }) => {\r\n  const [passExists, setPassExists] = useState(null);\r\n  const [isChecked, setChecked] = useState(false);\r\n  const [checkboxAvailable, setCheckboxAvailable] = useState(false);\r\n  Checkbox.isAvailableAsync().then((isAvailable) => {\r\n    if (isAvailable) {\r\n      setCheckboxAvailable(true);\r\n    }\r\n  });\r\n\r\n  const skipScreen = async () => {\r\n    await AsyncStorage.setItem(\"no_notice_safekey\", true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getPasskey() {\r\n        const value = await AsyncStorage.getItem(\"BM.KEY\");\r\n        if (value !== null) {\r\n          setPassExists(true);\r\n        } else {\r\n          setPassExists(false);\r\n        }\r\n      }\r\n      getPasskey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [passExists]);\r\n\r\n  useEffect(() => {\r\n    if (passExists === false) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [passExists]);\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <View>\r\n          <Text style={styles.noticeHeader}>\r\n            By allowing your SafeKey to be scanned you're agreeing to share the\r\n            following information:\r\n          </Text>\r\n          <Text style={styles.li}>\r\n            1. Initials{\"\\n\"}2. Date of Birth{\"\\n\"}3. Expiry\r\n          </Text>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            if (isChecked) {\r\n              skipScreen();\r\n            }\r\n            navigation.navigate(\"SafeKey QR\");\r\n          }}\r\n          style={[\r\n            styles.btn,\r\n            styles.shadow,\r\n            { backgroundColor: \"#1971ef\", maxWidth: 350, marginBottom: 25 },\r\n          ]}\r\n        >\r\n          <Text style={[styles.btnText, { color: \"#fff\" }]}>Continue</Text>\r\n        </TouchableOpacity>\r\n        <>\r\n          {checkboxAvailable ? (\r\n            <View style={[styles.center, { flexDirection: \"row\" }]}>\r\n              <Text style={[styles.text, { marginEnd: 8 }]}>\r\n                Don't show again\r\n              </Text>\r\n              <Checkbox value={isChecked} onValueChange={setChecked} />\r\n            </View>\r\n          ) : null}\r\n        </>\r\n      </View>\r\n      <Version />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PassInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { styles } from \"./styles\";\r\nimport Checkbox from \"expo-checkbox\";\r\nimport Version from \"../components/Version/Version\";\r\n\r\nconst VaxInfo = ({ navigation }) => {\r\n  const [vaxExists, setVaxExists] = useState(null);\r\n  const [isChecked, setChecked] = useState(false);\r\n  const [checkboxAvailable, setCheckboxAvailable] = useState(false);\r\n  Checkbox.isAvailableAsync().then((isAvailable) => {\r\n    if (isAvailable) {\r\n      setCheckboxAvailable(true);\r\n    }\r\n  });\r\n  const skipScreenVaccine = async () => {\r\n    await AsyncStorage.setItem(\"no_notice_vaccine\", true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getVax() {\r\n        const value = await AsyncStorage.getItem(\"BM.VAX\");\r\n        if (value !== null) {\r\n          setVaxExists(true);\r\n        } else {\r\n          setVaxExists(false);\r\n        }\r\n      }\r\n      getVax();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  useEffect(() => {\r\n    if (vaxExists === false) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <View>\r\n          <Text style={styles.noticeHeader}>\r\n            By allowing your Vaccination Certificate to be scanned you're\r\n            agreeing to share the following information:\r\n          </Text>\r\n          <Text style={styles.li}>\r\n            1. Full Name{\"\\n\"}2. Date of Birth{\"\\n\"}3. Expiry{\"\\n\"}4. Vaccine\r\n            Type\r\n            {\"\\n\"}\r\n            5. Vaccine Dosage{\"\\n\"}6. Date of Vaccination\r\n          </Text>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            if (isChecked) {\r\n              skipScreenVaccine();\r\n            }\r\n            navigation.navigate(\"Vaccination Certificate QR\");\r\n          }}\r\n          style={[\r\n            styles.btn,\r\n            styles.shadow,\r\n            { backgroundColor: \"#1971ef\", maxWidth: 350, marginBottom: 25 },\r\n          ]}\r\n        >\r\n          <Text style={[styles.btnText, { color: \"#fff\" }]}>Continue</Text>\r\n        </TouchableOpacity>\r\n        <>\r\n          {checkboxAvailable ? (\r\n            <View style={[styles.center, { flexDirection: \"row\" }]}>\r\n              <Text style={[styles.text, { marginEnd: 8 }]}>\r\n                Don't show again\r\n              </Text>\r\n              <Checkbox value={isChecked} onValueChange={setChecked} />\r\n            </View>\r\n          ) : null}\r\n        </>\r\n      </View>\r\n      <Version />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VaxInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, TouchableOpacity, Image } from \"react-native\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\nimport { styles } from \"./styles\";\r\n\r\nimport QRCode from \"react-native-qrcode-svg\";\r\nimport Version from \"../components/Version/Version\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst ShowQrPass = ({ navigation }) => {\r\n  const [passExists, setPassExists] = useState(null);\r\n  const [passkey, setPasskey] = useState(null);\r\n  const [passExpiry, setPassExpiry] = useState(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getPasskey() {\r\n        const value = await AsyncStorage.getItem(\"BM.KEY\");\r\n        if (value !== null) {\r\n          setPassExists(true);\r\n          setPasskey(value);\r\n        } else {\r\n          setPassExists(false);\r\n        }\r\n      }\r\n      getPasskey();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [passExists]);\r\n\r\n  useEffect(() => {\r\n    if (passExists === false) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [passExists]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getPassExpiry() {\r\n        const value = await AsyncStorage.getItem(\"passExpiry\");\r\n        if (value !== null) {\r\n          setPassExpiry(value);\r\n        }\r\n      }\r\n      getPassExpiry();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!passkey ? (\r\n        <Loading />\r\n      ) : (\r\n        <View style={styles.container}>\r\n          <Text style={styles.QrHeader}>SafeKey</Text>\r\n          <View style={styles.center}>\r\n            <View\r\n              style={[\r\n                styles.center,\r\n                {\r\n                  borderWidth: 5,\r\n                  borderColor: \"#63acfa\",\r\n                },\r\n              ]}\r\n            >\r\n              <Image\r\n                style={styles.bmQrLogo}\r\n                source={require(\"../assets/images/bm-logo.svg\")}\r\n              />\r\n              <QRCode\r\n                value={passkey}\r\n                size={300}\r\n                quietZone={10}\r\n                color={\"#121212\"}\r\n              />\r\n            </View>\r\n            {!passExpiry ? (\r\n              <Text></Text>\r\n            ) : (\r\n              <Text style={[styles.bold, { marginTop: 20, fontSize: 18 }]}>\r\n                Expiry:{\" \"}\r\n                <Text style={[styles.text, { fontSize: 18 }]}>\r\n                  {passExpiry}\r\n                </Text>\r\n              </Text>\r\n            )}\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              navigation.dispatch(\r\n                CommonActions.reset({ index: 0, routes: [{ name: \"QR List\" }] })\r\n              )\r\n            }\r\n            style={[\r\n              styles.btn,\r\n              styles.shadow,\r\n              {\r\n                backgroundColor: \"#1971ef\",\r\n                marginTop: 20,\r\n                marginBottom: 25,\r\n                maxWidth: 250,\r\n              },\r\n            ]}\r\n          >\r\n            <Text style={[styles.btnText, { color: \"#fff\" }]}>Go Back</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n      <Version />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowQrPass;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, TouchableOpacity, Image } from \"react-native\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\nimport { styles } from \"./styles\";\r\nimport QRCode from \"react-native-qrcode-svg\";\r\nimport Loading from \"./Loading\";\r\n\r\nimport Version from \"../components/Version/Version\";\r\n\r\nconst ShowQrVax = ({ navigation }) => {\r\n  const [vaxExists, setVaxExists] = useState(null);\r\n  const [vax, setVax] = useState(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getVax() {\r\n        const value = await AsyncStorage.getItem(\"BM.VAX\");\r\n        if (value !== null) {\r\n          setVaxExists(true);\r\n          setVax(value);\r\n        } else {\r\n          setVaxExists(false);\r\n        }\r\n      }\r\n      getVax();\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  useEffect(() => {\r\n    if (vaxExists === false) {\r\n      navigation.dispatch(StackActions.replace(\"QR List\"));\r\n    }\r\n  }, [vaxExists]);\r\n\r\n  return (\r\n    <>\r\n      {!vax ? (\r\n        <Loading />\r\n      ) : (\r\n        <View style={styles.container}>\r\n          <Text style={styles.QrHeader}>Vaccination Certificate</Text>\r\n          <View style={styles.center}>\r\n            <View\r\n              style={[\r\n                styles.center,\r\n                {\r\n                  borderWidth: 5,\r\n                  borderColor: \"#fc9cc7\",\r\n                },\r\n              ]}\r\n            >\r\n              <Image\r\n                style={styles.bmQrLogo}\r\n                source={require(\"../assets/images/bm-logo.svg\")}\r\n              />\r\n              <QRCode value={vax} size={300} quietZone={10} color={\"#121212\"} />\r\n            </View>\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              navigation.dispatch(\r\n                CommonActions.reset({ index: 0, routes: [{ name: \"QR List\" }] })\r\n              )\r\n            }\r\n            style={[\r\n              styles.btn,\r\n              styles.shadow,\r\n              {\r\n                backgroundColor: \"#1971ef\",\r\n                marginTop: 30,\r\n                marginBottom: 25,\r\n                maxWidth: 250,\r\n              },\r\n            ]}\r\n          >\r\n            <Text style={[styles.btnText, { color: \"#fff\" }]}>Go Back</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n      <Version />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowQrVax;\r\n","import React from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\nimport { styles } from \"./styles\";\r\nimport Version from \"../components/Version/Version\";\r\n\r\nconst NotFound = ({ navigation }) => {\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <Text\r\n          style={{\r\n            fontSize: 30,\r\n            fontFamily: \"OpenSans_600SemiBold\",\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          Oops\r\n        </Text>\r\n        <Text style={[styles.text, { textAlign: \"center\" }]}>\r\n          The page you were looking for was not found.\r\n        </Text>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.dispatch(\r\n              CommonActions.reset({ index: 0, routes: [{ name: \"Home\" }] })\r\n            );\r\n          }}\r\n          style={[\r\n            styles.shadow,\r\n            styles.btn,\r\n            {\r\n              backgroundColor: \"#1971ef\",\r\n              marginTop: 10,\r\n            },\r\n          ]}\r\n        >\r\n          <Text style={[styles.btnText, { color: \"#fff\" }]}>Go Back</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Version />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Image,\r\n  StyleSheet,\r\n  Linking,\r\n} from \"react-native\";\r\nimport { CommonActions } from \"@react-navigation/native\";\r\nimport DetectRTC from \"detectrtc\";\r\nimport Version from \"../components/Version/Version\";\r\nimport { useAssets } from \"expo-asset\";\r\nimport Loading from \"./Loading\";\r\nimport { styles } from \"./styles\";\r\n\r\nconst NoCamera = ({ navigation }) => {\r\n  const [learnUrl, setLearnUrl] = useState(null);\r\n\r\n  const [assets] = useAssets([require(\"../assets/images/nocam.png\")]);\r\n\r\n  useEffect(() => {\r\n    DetectRTC.load(function () {\r\n      if (DetectRTC.browser.isChrome) {\r\n        setLearnUrl(\"https://support.google.com/chrome/answer/2693767\");\r\n      } else if (DetectRTC.browser.isEdge) {\r\n        setLearnUrl(\r\n          \"https://help.doxy.me/en/articles/3867526-allow-access-to-camera-in-edge#:~:text=How%20to%20enable%20your,browser%20tab%20(CTRL%20%2B%20R).\"\r\n        );\r\n      } else if (DetectRTC.browser.isFirefox) {\r\n        setLearnUrl(\"https://support.mozilla.org/en-US/kb/camera-permissions\");\r\n      } else if (DetectRTC.browser.isOpera) {\r\n        setLearnUrl(\"https://help.opera.com/en/latest/web-preferences/#camera\");\r\n      } else if (DetectRTC.browser.isSafari) {\r\n        setLearnUrl(\r\n          \"https://help.cer.bo/support/solutions/articles/8000084621-allow-access-to-camera-in-safari-mobile-tablet-\"\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      {!assets ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <View style={styles.container}>\r\n            <Image\r\n              source={require(\"../assets/images/nocam.png\")}\r\n              style={nocam.image}\r\n            />\r\n            <Text style={[styles.bold, { marginBottom: 15, fontSize: 18 }]}>\r\n              No access to camera\r\n            </Text>\r\n            <Text\r\n              style={[styles.text, { textAlign: \"center\", marginBottom: 10 }]}\r\n            >\r\n              Please enable camera access in your web browser’s settings then\r\n              try scanning again.\r\n            </Text>\r\n            <View\r\n              style={[\r\n                styles.center,\r\n                {\r\n                  flexDirection: \"row\",\r\n                },\r\n              ]}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  Linking.openURL(learnUrl);\r\n                }}\r\n                style={[\r\n                  styles.center,\r\n                  {\r\n                    borderWidth: 1,\r\n                    borderColor: \"grey\",\r\n                    borderRadius: 5,\r\n                    paddingHorizontal: 10,\r\n                    paddingVertical: 5,\r\n                    marginRight: 10,\r\n                  },\r\n                ]}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: \"blue\",\r\n                  }}\r\n                >\r\n                  Learn more\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  navigation.dispatch(\r\n                    CommonActions.reset({\r\n                      index: 0,\r\n                      routes: [{ name: \"QR List\" }],\r\n                    })\r\n                  );\r\n                }}\r\n                style={[nocam.button, styles.shadow]}\r\n              >\r\n                <Text style={{ color: \"white\", textAlign: \"center\" }}>\r\n                  Go back\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n          <Version />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst nocam = StyleSheet.create({\r\n  image: {\r\n    width: 40,\r\n    height: 40,\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#1971ef\",\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 5,\r\n    borderRadius: 5,\r\n  },\r\n});\r\n\r\nexport default NoCamera;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { View, Image, Platform } from \"react-native\";\r\n//  Import react-navigation\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport {\r\n  createStackNavigator,\r\n  TransitionPresets,\r\n} from \"@react-navigation/stack\";\r\n// Import Firebase\r\nimport * as Analytics from \"expo-firebase-analytics\";\r\n// Importing the screens\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport SelectDocumentScreen from \"./screens/SelectDocumentScreen\";\r\nimport QrScanScreen from \"./screens/QrScanScreen\";\r\nimport QrListScreen from \"./screens/QrListScreen\";\r\nimport PassInfoScreen from \"./screens/NoticeSafeKeyScreen\";\r\nimport VaxInfoScreen from \"./screens/NoticeVaccinationScreen\";\r\nimport ShowQrScreenPass from \"./screens/ShowSafeKeyQrScreen\";\r\nimport ShowQrScreenVax from \"./screens/ShowVaccinationQrScreen\";\r\nimport NotFound from \"./screens/NotFoundScreen\";\r\nimport NoCamera from \"./screens/NoCameraScreen\";\r\nimport Loading from \"./screens/Loading\";\r\n// Importing async storage\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n// Importing fonts\r\nimport {\r\n  useFonts,\r\n  OpenSans_400Regular,\r\n  OpenSans_600SemiBold,\r\n  OpenSans_700Bold,\r\n  OpenSans_800ExtraBold,\r\n} from \"@expo-google-fonts/open-sans\";\r\n// Importing Toast\r\nimport { ToastProvider } from \"react-native-toast-notifications\";\r\n// Importing Modal\r\nconst Stack = createStackNavigator();\r\n\r\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\r\n\r\nexport default function App() {\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n  const [hasQR, setHasQR] = useState(false);\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    OpenSans_400Regular,\r\n    OpenSans_600SemiBold,\r\n    OpenSans_700Bold,\r\n    OpenSans_800ExtraBold,\r\n  });\r\n\r\n  const config = {\r\n    screens: {\r\n      Home: \"\",\r\n      \"Select Document\": \"select-document\",\r\n      \"Scan QR\": \"qr-scanner\",\r\n      \"QR List\": \"wallet\",\r\n      \"SafeKey Notice\": \"safekey-notice\",\r\n      \"Vaccination Notice\": \"certificate-notice\",\r\n      \"SafeKey QR\": \"safekey\",\r\n      \"Vaccination Certificate QR\": \"vaccination-certificate\",\r\n      NoCamera: \"NoCamera\",\r\n      NotFound: \"*\",\r\n    },\r\n  };\r\n\r\n  const linking = {\r\n    prefixes: [],\r\n    config,\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function read() {\r\n      try {\r\n        const passkey = await AsyncStorage.getItem(\"BM.KEY\");\r\n        const vax = await AsyncStorage.getItem(\"BM.VAX\");\r\n\r\n        if (passkey !== null || vax !== null) {\r\n          setHasQR(true);\r\n        }\r\n      } catch (e) {\r\n        alert(\"Failed to fetch the data from storage: \" + e);\r\n      }\r\n      setHasLoaded(true);\r\n    }\r\n    read();\r\n  }, []);\r\n\r\n  const navigationRef = useRef();\r\n  const routeNameRef = useRef();\r\n\r\n  return (\r\n    <ToastProvider offsetBottom={55}>\r\n      {fontsLoaded && hasLoaded ? (\r\n        <NavigationContainer\r\n          ref={navigationRef}\r\n          onReady={() =>\r\n            (routeNameRef.current =\r\n              navigationRef.current.getCurrentRoute().name)\r\n          }\r\n          onStateChange={async () => {\r\n            const previousRouteName = routeNameRef.current;\r\n            const currentRouteName =\r\n              navigationRef.current.getCurrentRoute().name;\r\n            if (previousRouteName !== currentRouteName) {\r\n              // The line below uses the expo-firebase-analytics tracker\r\n              // https://docs.expo.io/versions/latest/sdk/firebase-analytics/\r\n              // Change this line to use another Mobile analytics SDK\r\n              await Analytics.setCurrentScreen(currentRouteName);\r\n            }\r\n\r\n            // Save the current route name for later comparison\r\n            routeNameRef.current = currentRouteName;\r\n          }}\r\n          linking={linking}\r\n          fallback={<Loading />}\r\n        >\r\n          <Stack.Navigator\r\n            screenOptions={{\r\n              headerTitleStyle: {\r\n                alignSelf: \"center\",\r\n                fontFamily: \"OpenSans_600SemiBold\",\r\n              },\r\n              headerRight: () => (\r\n                <Image\r\n                  resizeMethod=\"auto\"\r\n                  style={{ width: 23, height: 35, margin: 20 }}\r\n                  source={require(\"./assets/images/bm-logo.svg\")}\r\n                />\r\n              ),\r\n            }}\r\n            initialRouteName={hasQR ? \"QR List\" : \"Home\"}\r\n          >\r\n            <Stack.Screen\r\n              name=\"Home\"\r\n              component={HomeScreen}\r\n              options={{\r\n                ...TransitionPresets.ModalSlideFromBottomIOS,\r\n                headerTitleStyle: {\r\n                  alignSelf: \"flex-start\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n                title: \"SafeKey Wallet\",\r\n                headerTitle: \" SafeKey Wallet\",\r\n                cardStyleInterpolator:\r\n                  Platform.OS === \"ios\"\r\n                    ? ({ current }) => ({\r\n                        cardStyle: { opacity: current.progress },\r\n                      })\r\n                    : undefined,\r\n                headerRight: () => (\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row-reverse\",\r\n                      paddingRight: 20,\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      resizeMethod=\"auto\"\r\n                      style={{ width: 23, height: 35 }}\r\n                      source={require(\"./assets/images/bm-logo.svg\")}\r\n                    />\r\n                  </View>\r\n                ),\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Select Document\"\r\n              component={SelectDocumentScreen}\r\n              options={{\r\n                title: \"Select Document\",\r\n                animationTypeForReplace: \"pop\",\r\n                headerTitleStyle: {\r\n                  alignSelf: \"flex-start\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n                headerTitle: \" Select your SafeKey Document\",\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"QR List\"\r\n              component={QrListScreen}\r\n              options={{\r\n                title: \"SafeKey Wallet\",\r\n                animationTypeForReplace: \"pop\",\r\n                headerTitleStyle: {\r\n                  alignSelf: \"flex-start\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n                headerTitle: \" SafeKey Wallet\",\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Scan QR\"\r\n              options={{\r\n                headerTitleAlign: \"center\",\r\n                headerTitle: \"Scan your SafeKey\",\r\n              }}\r\n              component={QrScanScreen}\r\n            />\r\n            <Stack.Screen\r\n              name=\"SafeKey Notice\"\r\n              component={PassInfoScreen}\r\n              options={{\r\n                headerTitleAlign: \"center\",\r\n                headerTitleStyle: {\r\n                  alignSelf: \"center\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n                headerTitle: \"Notice\",\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Vaccination Notice\"\r\n              component={VaxInfoScreen}\r\n              options={{\r\n                headerTitleAlign: \"center\",\r\n                headerTitle: \"Notice\",\r\n                headerTitleStyle: {\r\n                  alignSelf: \"center\",\r\n                  fontFamily: \"OpenSans_600SemiBold\",\r\n                },\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              options={{ headerTitle: \"Show QR\", headerTitleAlign: \"center\" }}\r\n              name=\"SafeKey QR\"\r\n              component={ShowQrScreenPass}\r\n            />\r\n            <Stack.Screen\r\n              options={{ headerTitle: \"Show QR\", headerTitleAlign: \"center\" }}\r\n              name=\"Vaccination Certificate QR\"\r\n              component={ShowQrScreenVax}\r\n            />\r\n            <Stack.Screen\r\n              options={{\r\n                headerTitle: \"404: Not Found\",\r\n                headerTitleAlign: \"center\",\r\n                title: \"Page Not Found\",\r\n              }}\r\n              name=\"NotFound\"\r\n              component={NotFound}\r\n            />\r\n            <Stack.Screen\r\n              options={{\r\n                headerTitleAlign: \"center\",\r\n                headerTitle: \"No Camera Permission\",\r\n                title: \"No Camera Permission\",\r\n              }}\r\n              name=\"NoCamera\"\r\n              component={NoCamera}\r\n            />\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </ToastProvider>\r\n  );\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/icon.1092b622.png\";"],"sourceRoot":""}